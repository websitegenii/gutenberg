"use strict";(self.webpackChunkgutenberg=self.webpackChunkgutenberg||[]).push([[6459],{"./packages/components/src/modal/index.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return src_modal}});var classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),react=__webpack_require__("./node_modules/react/index.js"),react_dom=__webpack_require__("./node_modules/react-dom/index.js"),use_instance_id=__webpack_require__("./packages/compose/build-module/hooks/use-instance-id/index.js"),use_focus_on_mount=__webpack_require__("./packages/compose/build-module/hooks/use-focus-on-mount/index.js"),use_constrained_tabbing=__webpack_require__("./packages/compose/build-module/hooks/use-constrained-tabbing/index.js"),use_focus_return=__webpack_require__("./packages/compose/build-module/hooks/use-focus-return/index.js"),use_focus_outside=__webpack_require__("./packages/compose/build-module/hooks/use-focus-outside/index.js"),use_merge_refs=__webpack_require__("./packages/compose/build-module/hooks/use-merge-refs/index.js"),build_module=__webpack_require__("./packages/i18n/build-module/index.js"),library_close=__webpack_require__("./packages/icons/build-module/library/close.js");const LIVE_REGION_ARIA_ROLES=new Set(["alert","status","log","marquee","timer"]);let hiddenElements=[],isHidden=!1;function hideApp(unhiddenElement){if(isHidden)return;Array.from(document.body.children).forEach((element=>{element!==unhiddenElement&&function elementShouldBeHidden(element){const role=element.getAttribute("role");return!("SCRIPT"===element.tagName||element.hasAttribute("aria-hidden")||element.hasAttribute("aria-live")||role&&LIVE_REGION_ARIA_ROLES.has(role))}(element)&&(element.setAttribute("aria-hidden","true"),hiddenElements.push(element))})),isHidden=!0}var src_button=__webpack_require__("./packages/components/src/button/index.js"),style_provider=__webpack_require__("./packages/components/src/style-provider/index.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");let openModalCount=0;const Modal=(0,react.forwardRef)((function UnforwardedModal(props,forwardedRef){const{bodyOpenClassName:bodyOpenClassName="modal-open",role:role="dialog",title:title=null,focusOnMount:focusOnMount=!0,shouldCloseOnEsc:shouldCloseOnEsc=!0,shouldCloseOnClickOutside:shouldCloseOnClickOutside=!0,isDismissible:isDismissible=!0,aria:aria={labelledby:void 0,describedby:void 0},onRequestClose:onRequestClose,icon:icon,closeButtonLabel:closeButtonLabel,children:children,style:style,overlayClassName:overlayClassName,className:className,contentLabel:contentLabel,onKeyDown:onKeyDown,isFullScreen:isFullScreen=!1,__experimentalHideHeader:__experimentalHideHeader=!1}=props,ref=(0,react.useRef)(),instanceId=(0,use_instance_id.Z)(Modal),headingId=title?`components-modal-header-${instanceId}`:aria.labelledby,focusOnMountRef=(0,use_focus_on_mount.Z)(focusOnMount),constrainedTabbingRef=(0,use_constrained_tabbing.Z)(),focusReturnRef=(0,use_focus_return.Z)(),focusOutsideProps=(0,use_focus_outside.Z)(onRequestClose),[hasScrolledContent,setHasScrolledContent]=(0,react.useState)(!1);(0,react.useEffect)((()=>(openModalCount++,1===openModalCount&&(hideApp(ref.current),document.body.classList.add(bodyOpenClassName)),()=>{openModalCount--,0===openModalCount&&(document.body.classList.remove(bodyOpenClassName),function showApp(){isHidden&&(hiddenElements.forEach((element=>{element.removeAttribute("aria-hidden")})),hiddenElements=[],isHidden=!1)}())})),[bodyOpenClassName]);const onContentContainerScroll=(0,react.useCallback)((e=>{var _e$currentTarget$scro,_e$currentTarget;const scrollY=null!==(_e$currentTarget$scro=null==e||null===(_e$currentTarget=e.currentTarget)||void 0===_e$currentTarget?void 0:_e$currentTarget.scrollTop)&&void 0!==_e$currentTarget$scro?_e$currentTarget$scro:-1;!hasScrolledContent&&scrollY>0?setHasScrolledContent(!0):hasScrolledContent&&scrollY<=0&&setHasScrolledContent(!1)}),[hasScrolledContent]);return(0,react_dom.createPortal)((0,jsx_runtime.jsx)("div",{ref:(0,use_merge_refs.Z)([ref,forwardedRef]),className:classnames_default()("components-modal__screen-overlay",overlayClassName),onKeyDown:function handleEscapeKeyDown(event){event.nativeEvent.isComposing||229===event.keyCode||shouldCloseOnEsc&&"Escape"===event.code&&!event.defaultPrevented&&(event.preventDefault(),onRequestClose&&onRequestClose(event))},children:(0,jsx_runtime.jsx)(style_provider.Z,{document:document,children:(0,jsx_runtime.jsx)("div",{className:classnames_default()("components-modal__frame",className,{"is-full-screen":isFullScreen}),style:style,ref:(0,use_merge_refs.Z)([constrainedTabbingRef,focusReturnRef,focusOnMountRef]),role:role,"aria-label":contentLabel,"aria-labelledby":contentLabel?void 0:headingId,"aria-describedby":aria.describedby,tabIndex:-1,...shouldCloseOnClickOutside?focusOutsideProps:{},onKeyDown:onKeyDown,children:(0,jsx_runtime.jsxs)("div",{className:classnames_default()("components-modal__content",{"hide-header":__experimentalHideHeader,"has-scrolled-content":hasScrolledContent}),role:"document",onScroll:onContentContainerScroll,children:[!__experimentalHideHeader&&(0,jsx_runtime.jsxs)("div",{className:"components-modal__header",children:[(0,jsx_runtime.jsxs)("div",{className:"components-modal__header-heading-container",children:[icon&&(0,jsx_runtime.jsx)("span",{className:"components-modal__icon-container","aria-hidden":!0,children:icon}),title&&(0,jsx_runtime.jsx)("h1",{id:headingId,className:"components-modal__header-heading",children:title})]}),isDismissible&&(0,jsx_runtime.jsx)(src_button.Z,{onClick:onRequestClose,icon:library_close.Z,label:closeButtonLabel||(0,build_module.__)("Close dialog")})]}),children]})})})}),document.body)}));var src_modal=Modal;try{Modal.displayName="Modal",Modal.__docgenInfo={description:'Modals give users information and choices related to a task they’re trying to\naccomplish. They can contain critical information, require decisions, or\ninvolve multiple tasks.\n\n```jsx\nimport { Button, Modal } from \'@wordpress/components\';\nimport { useState } from \'@wordpress/element\';\n\nconst MyModal = () => {\n  const [ isOpen, setOpen ] = useState( false );\n  const openModal = () => setOpen( true );\n  const closeModal = () => setOpen( false );\n\n  return (\n    <>\n      <Button variant="secondary" onClick={ openModal }>\n        Open Modal\n      </Button>\n      { isOpen && (\n        <Modal title="This is my modal" onRequestClose={ closeModal }>\n          <Button variant="secondary" onClick={ closeModal }>\n            My custom close button\n          </Button>\n        </Modal>\n      ) }\n    </>\n  );\n};\n```',displayName:"Modal",props:{aria:{defaultValue:null,description:"",name:"aria",required:!1,type:{name:"{ describedby?: string; labelledby?: string; }"}},bodyOpenClassName:{defaultValue:{value:"'modal-open'"},description:"Class name added to the body element when the modal is open.",name:"bodyOpenClassName",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The children elements.",name:"children",required:!0,type:{name:"ReactNode"}},className:{defaultValue:null,description:"If this property is added, it will an additional class name to the modal\ncontent `div`.",name:"className",required:!1,type:{name:"string"}},closeButtonLabel:{defaultValue:null,description:"Label on the close button.",name:"closeButtonLabel",required:!1,type:{name:"string"}},contentLabel:{defaultValue:null,description:"If this property is added, it will be added to the modal content `div` as\n`aria-label`.\n\nTitles are required for accessibility reasons, see `aria.labelledby` and\n`title` for other ways to provide a title.",name:"contentLabel",required:!1,type:{name:"string"}},focusOnMount:{defaultValue:{value:"true"},description:"If this property is true, it will focus the first tabbable element\nrendered in the modal.",name:"focusOnMount",required:!1,type:{name:'boolean | "firstElement"'}},icon:{defaultValue:null,description:"If this property is added, an icon will be added before the title.",name:"icon",required:!1,type:{name:"Element"}},isDismissible:{defaultValue:{value:"true"},description:"If this property is set to false, the modal will not display a close icon\nand cannot be dismissed.",name:"isDismissible",required:!1,type:{name:"boolean"}},isFullScreen:{defaultValue:{value:"false"},description:"This property when set to `true` will render a full screen modal.",name:"isFullScreen",required:!1,type:{name:"boolean"}},onKeyDown:{defaultValue:null,description:"Handle the key down on the modal frame `div`.",name:"onKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement>"}},onRequestClose:{defaultValue:null,description:"This function is called to indicate that the modal should be closed.",name:"onRequestClose",required:!0,type:{name:"(event?: KeyboardEvent<HTMLDivElement> | SyntheticEvent<Element, Event>) => void"}},overlayClassName:{defaultValue:null,description:"If this property is added, it will an additional class name to the modal\noverlay `div`.",name:"overlayClassName",required:!1,type:{name:"string"}},role:{defaultValue:{value:"'dialog'"},description:"If this property is added, it will override the default role of the\nmodal.",name:"role",required:!1,type:{name:"AriaRole"}},shouldCloseOnClickOutside:{defaultValue:{value:"true"},description:"If this property is added, it will determine whether the modal requests\nto close when a mouse click occurs outside of the modal content.",name:"shouldCloseOnClickOutside",required:!1,type:{name:"boolean"}},shouldCloseOnEsc:{defaultValue:{value:"true"},description:"If this property is added, it will determine whether the modal requests\nto close when the escape key is pressed.",name:"shouldCloseOnEsc",required:!1,type:{name:"boolean"}},style:{defaultValue:null,description:"If this property is added, it will be added to the modal frame `div`.",name:"style",required:!1,type:{name:"CSSProperties"}},title:{defaultValue:null,description:"This property is used as the modal header's title.\n\nTitles are required for accessibility reasons, see `aria.labelledby` and\n`contentLabel` for other ways to provide a title.",name:"title",required:!1,type:{name:"string"}},__experimentalHideHeader:{defaultValue:{value:"false"},description:"When set to `true`, the Modal's header (including the icon, title and\nclose button) will not be rendered.\n\n_Warning_: This property is still experimental. “Experimental” means this\nis an early implementation subject to drastic and breaking changes.",name:"__experimentalHideHeader",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/modal/index.tsx#Modal"]={docgenInfo:Modal.__docgenInfo,name:"Modal",path:"packages/components/src/modal/index.tsx#Modal"})}catch(__react_docgen_typescript_loader_error){}try{modal.displayName="modal",modal.__docgenInfo={description:'Modals give users information and choices related to a task they’re trying to\naccomplish. They can contain critical information, require decisions, or\ninvolve multiple tasks.\n\n```jsx\nimport { Button, Modal } from \'@wordpress/components\';\nimport { useState } from \'@wordpress/element\';\n\nconst MyModal = () => {\n  const [ isOpen, setOpen ] = useState( false );\n  const openModal = () => setOpen( true );\n  const closeModal = () => setOpen( false );\n\n  return (\n    <>\n      <Button variant="secondary" onClick={ openModal }>\n        Open Modal\n      </Button>\n      { isOpen && (\n        <Modal title="This is my modal" onRequestClose={ closeModal }>\n          <Button variant="secondary" onClick={ closeModal }>\n            My custom close button\n          </Button>\n        </Modal>\n      ) }\n    </>\n  );\n};\n```',displayName:"modal",props:{aria:{defaultValue:null,description:"",name:"aria",required:!1,type:{name:"{ describedby?: string; labelledby?: string; }"}},bodyOpenClassName:{defaultValue:{value:"'modal-open'"},description:"Class name added to the body element when the modal is open.",name:"bodyOpenClassName",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The children elements.",name:"children",required:!0,type:{name:"ReactNode"}},className:{defaultValue:null,description:"If this property is added, it will an additional class name to the modal\ncontent `div`.",name:"className",required:!1,type:{name:"string"}},closeButtonLabel:{defaultValue:null,description:"Label on the close button.",name:"closeButtonLabel",required:!1,type:{name:"string"}},contentLabel:{defaultValue:null,description:"If this property is added, it will be added to the modal content `div` as\n`aria-label`.\n\nTitles are required for accessibility reasons, see `aria.labelledby` and\n`title` for other ways to provide a title.",name:"contentLabel",required:!1,type:{name:"string"}},focusOnMount:{defaultValue:{value:"true"},description:"If this property is true, it will focus the first tabbable element\nrendered in the modal.",name:"focusOnMount",required:!1,type:{name:'boolean | "firstElement"'}},icon:{defaultValue:null,description:"If this property is added, an icon will be added before the title.",name:"icon",required:!1,type:{name:"Element"}},isDismissible:{defaultValue:{value:"true"},description:"If this property is set to false, the modal will not display a close icon\nand cannot be dismissed.",name:"isDismissible",required:!1,type:{name:"boolean"}},isFullScreen:{defaultValue:{value:"false"},description:"This property when set to `true` will render a full screen modal.",name:"isFullScreen",required:!1,type:{name:"boolean"}},onKeyDown:{defaultValue:null,description:"Handle the key down on the modal frame `div`.",name:"onKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement>"}},onRequestClose:{defaultValue:null,description:"This function is called to indicate that the modal should be closed.",name:"onRequestClose",required:!0,type:{name:"(event?: KeyboardEvent<HTMLDivElement> | SyntheticEvent<Element, Event>) => void"}},overlayClassName:{defaultValue:null,description:"If this property is added, it will an additional class name to the modal\noverlay `div`.",name:"overlayClassName",required:!1,type:{name:"string"}},role:{defaultValue:{value:"'dialog'"},description:"If this property is added, it will override the default role of the\nmodal.",name:"role",required:!1,type:{name:"AriaRole"}},shouldCloseOnClickOutside:{defaultValue:{value:"true"},description:"If this property is added, it will determine whether the modal requests\nto close when a mouse click occurs outside of the modal content.",name:"shouldCloseOnClickOutside",required:!1,type:{name:"boolean"}},shouldCloseOnEsc:{defaultValue:{value:"true"},description:"If this property is added, it will determine whether the modal requests\nto close when the escape key is pressed.",name:"shouldCloseOnEsc",required:!1,type:{name:"boolean"}},style:{defaultValue:null,description:"If this property is added, it will be added to the modal frame `div`.",name:"style",required:!1,type:{name:"CSSProperties"}},title:{defaultValue:null,description:"This property is used as the modal header's title.\n\nTitles are required for accessibility reasons, see `aria.labelledby` and\n`contentLabel` for other ways to provide a title.",name:"title",required:!1,type:{name:"string"}},__experimentalHideHeader:{defaultValue:{value:"false"},description:"When set to `true`, the Modal's header (including the icon, title and\nclose button) will not be rendered.\n\n_Warning_: This property is still experimental. “Experimental” means this\nis an early implementation subject to drastic and breaking changes.",name:"__experimentalHideHeader",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/modal/index.tsx#modal"]={docgenInfo:modal.__docgenInfo,name:"modal",path:"packages/components/src/modal/index.tsx#modal"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/modal/stories/index.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default}});var _wordpress_element__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),_button__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/components/src/button/index.js"),_input_control__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/components/src/input-control/index.tsx"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/components/src/modal/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const meta={component:___WEBPACK_IMPORTED_MODULE_1__.Z,title:"Components/Modal",argTypes:{children:{control:{type:null}},onKeyDown:{control:{type:null}},focusOnMount:{control:{type:"boolean"}},role:{control:{type:"text"}},onRequestClose:{action:"onRequestClose"}},parameters:{sourceLink:"packages/components/src/modal",controls:{expanded:!0}}};__webpack_exports__.default=meta;const Default=(_ref=>{let{onRequestClose:onRequestClose,...args}=_ref;const[isOpen,setOpen]=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_2__.useState)(!1),closeModal=event=>{setOpen(!1),onRequestClose(event)};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_button__WEBPACK_IMPORTED_MODULE_3__.Z,{variant:"secondary",onClick:()=>setOpen(!0),children:"Open Modal"}),isOpen&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.Z,{onRequestClose:closeModal,style:{maxWidth:"600px"},...args,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_input_control__WEBPACK_IMPORTED_MODULE_4__.ZP,{style:{marginBottom:"20px"}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_button__WEBPACK_IMPORTED_MODULE_3__.Z,{variant:"secondary",onClick:closeModal,children:"Close Modal"})]})]})}).bind({});Default.args={title:"Title"},Default.parameters={docs:{source:{code:""}}};try{ComponentMeta.displayName="ComponentMeta",ComponentMeta.__docgenInfo={description:"For the common case where a component's stories are simple components that receives args as props:\n\n```tsx\nexport default { ... } as ComponentMeta<typeof Button>;\n```",displayName:"ComponentMeta",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/modal/stories/index.tsx#ComponentMeta"]={docgenInfo:ComponentMeta.__docgenInfo,name:"ComponentMeta",path:"packages/components/src/modal/stories/index.tsx#ComponentMeta"})}catch(__react_docgen_typescript_loader_error){}}}]);