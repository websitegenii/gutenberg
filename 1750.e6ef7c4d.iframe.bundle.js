"use strict";(self.webpackChunkgutenberg=self.webpackChunkgutenberg||[]).push([[1750],{"./packages/block-editor/src/store/constants.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{G:function(){return STORE_NAME}});const STORE_NAME="core/block-editor"},"./packages/block-editor/src/store/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{h:function(){return store},i:function(){return storeConfig}});var selectors_namespaceObject={};__webpack_require__.r(selectors_namespaceObject),__webpack_require__.d(selectors_namespaceObject,{__experimentalGetActiveBlockIdByBlockNames:function(){return __experimentalGetActiveBlockIdByBlockNames},__experimentalGetAllowedBlocks:function(){return __experimentalGetAllowedBlocks},__experimentalGetAllowedPatterns:function(){return __experimentalGetAllowedPatterns},__experimentalGetBlockListSettingsForBlocks:function(){return __experimentalGetBlockListSettingsForBlocks},__experimentalGetDirectInsertBlock:function(){return __experimentalGetDirectInsertBlock},__experimentalGetGlobalBlocksByName:function(){return __experimentalGetGlobalBlocksByName},__experimentalGetLastBlockAttributeChanges:function(){return __experimentalGetLastBlockAttributeChanges},__experimentalGetParsedPattern:function(){return __experimentalGetParsedPattern},__experimentalGetPatternTransformItems:function(){return __experimentalGetPatternTransformItems},__experimentalGetPatternsByBlockTypes:function(){return __experimentalGetPatternsByBlockTypes},__experimentalGetReusableBlockTitle:function(){return __experimentalGetReusableBlockTitle},__experimentalIsBlockInterfaceHidden:function(){return __experimentalIsBlockInterfaceHidden},__unstableGetBlockWithoutInnerBlocks:function(){return __unstableGetBlockWithoutInnerBlocks},__unstableGetClientIdWithClientIdsTree:function(){return __unstableGetClientIdWithClientIdsTree},__unstableGetClientIdsTree:function(){return __unstableGetClientIdsTree},__unstableGetContentLockingParent:function(){return __unstableGetContentLockingParent},__unstableGetEditorMode:function(){return __unstableGetEditorMode},__unstableGetSelectedBlocksWithPartialSelection:function(){return __unstableGetSelectedBlocksWithPartialSelection},__unstableGetTemporarilyEditingAsBlocks:function(){return __unstableGetTemporarilyEditingAsBlocks},__unstableGetVisibleBlocks:function(){return __unstableGetVisibleBlocks},__unstableHasActiveBlockOverlayActive:function(){return __unstableHasActiveBlockOverlayActive},__unstableIsFullySelected:function(){return __unstableIsFullySelected},__unstableIsLastBlockChangeIgnored:function(){return __unstableIsLastBlockChangeIgnored},__unstableIsSelectionCollapsed:function(){return __unstableIsSelectionCollapsed},__unstableIsSelectionMergeable:function(){return __unstableIsSelectionMergeable},__unstableIsWithinBlockOverlay:function(){return __unstableIsWithinBlockOverlay},__unstableSelectionHasUnmergeableBlock:function(){return __unstableSelectionHasUnmergeableBlock},areInnerBlocksControlled:function(){return areInnerBlocksControlled},canEditBlock:function(){return canEditBlock},canInsertBlockType:function(){return canInsertBlockType},canInsertBlocks:function(){return canInsertBlocks},canLockBlockType:function(){return canLockBlockType},canMoveBlock:function(){return canMoveBlock},canMoveBlocks:function(){return canMoveBlocks},canRemoveBlock:function(){return canRemoveBlock},canRemoveBlocks:function(){return canRemoveBlocks},didAutomaticChange:function(){return didAutomaticChange},getAdjacentBlockClientId:function(){return getAdjacentBlockClientId},getBlock:function(){return getBlock},getBlockAttributes:function(){return getBlockAttributes},getBlockCount:function(){return getBlockCount},getBlockHierarchyRootClientId:function(){return getBlockHierarchyRootClientId},getBlockIndex:function(){return getBlockIndex},getBlockInsertionPoint:function(){return getBlockInsertionPoint},getBlockListSettings:function(){return getBlockListSettings},getBlockMode:function(){return getBlockMode},getBlockName:function(){return getBlockName},getBlockOrder:function(){return getBlockOrder},getBlockParents:function(){return getBlockParents},getBlockParentsByBlockName:function(){return getBlockParentsByBlockName},getBlockRootClientId:function(){return getBlockRootClientId},getBlockSelectionEnd:function(){return getBlockSelectionEnd},getBlockSelectionStart:function(){return getBlockSelectionStart},getBlockTransformItems:function(){return getBlockTransformItems},getBlocks:function(){return getBlocks},getBlocksByClientId:function(){return getBlocksByClientId},getClientIdsOfDescendants:function(){return getClientIdsOfDescendants},getClientIdsWithDescendants:function(){return getClientIdsWithDescendants},getDraggedBlockClientIds:function(){return getDraggedBlockClientIds},getFirstMultiSelectedBlockClientId:function(){return getFirstMultiSelectedBlockClientId},getGlobalBlockCount:function(){return getGlobalBlockCount},getInserterItems:function(){return getInserterItems},getLastInsertedBlockClientId:function(){return getLastInsertedBlockClientId},getLastMultiSelectedBlockClientId:function(){return getLastMultiSelectedBlockClientId},getLowestCommonAncestorWithSelectedBlock:function(){return getLowestCommonAncestorWithSelectedBlock},getMultiSelectedBlockClientIds:function(){return getMultiSelectedBlockClientIds},getMultiSelectedBlocks:function(){return getMultiSelectedBlocks},getMultiSelectedBlocksEndClientId:function(){return getMultiSelectedBlocksEndClientId},getMultiSelectedBlocksStartClientId:function(){return getMultiSelectedBlocksStartClientId},getNextBlockClientId:function(){return getNextBlockClientId},getPreviousBlockClientId:function(){return getPreviousBlockClientId},getSelectedBlock:function(){return getSelectedBlock},getSelectedBlockClientId:function(){return getSelectedBlockClientId},getSelectedBlockClientIds:function(){return getSelectedBlockClientIds},getSelectedBlockCount:function(){return getSelectedBlockCount},getSelectedBlocksInitialCaretPosition:function(){return getSelectedBlocksInitialCaretPosition},getSelectionEnd:function(){return getSelectionEnd},getSelectionStart:function(){return getSelectionStart},getSettings:function(){return getSettings},getTemplate:function(){return getTemplate},getTemplateLock:function(){return getTemplateLock},hasBlockMovingClientId:function(){return selectors_hasBlockMovingClientId},hasInserterItems:function(){return hasInserterItems},hasMultiSelection:function(){return hasMultiSelection},hasSelectedBlock:function(){return hasSelectedBlock},hasSelectedInnerBlock:function(){return hasSelectedInnerBlock},isAncestorBeingDragged:function(){return isAncestorBeingDragged},isAncestorMultiSelected:function(){return isAncestorMultiSelected},isBlockBeingDragged:function(){return isBlockBeingDragged},isBlockHighlighted:function(){return isBlockHighlighted},isBlockInsertionPointVisible:function(){return isBlockInsertionPointVisible},isBlockMultiSelected:function(){return isBlockMultiSelected},isBlockSelected:function(){return isBlockSelected},isBlockValid:function(){return isBlockValid},isBlockVisible:function(){return isBlockVisible},isBlockWithinSelection:function(){return isBlockWithinSelection},isCaretWithinFormattedText:function(){return isCaretWithinFormattedText},isDraggingBlocks:function(){return isDraggingBlocks},isFirstMultiSelectedBlock:function(){return isFirstMultiSelectedBlock},isLastBlockChangePersistent:function(){return isLastBlockChangePersistent},isMultiSelecting:function(){return selectors_isMultiSelecting},isNavigationMode:function(){return isNavigationMode},isSelectionEnabled:function(){return selectors_isSelectionEnabled},isTyping:function(){return selectors_isTyping},isValidTemplate:function(){return isValidTemplate},wasBlockJustInserted:function(){return wasBlockJustInserted}});var actions_namespaceObject={};__webpack_require__.r(actions_namespaceObject),__webpack_require__.d(actions_namespaceObject,{__experimentalHideBlockInterface:function(){return __experimentalHideBlockInterface},__experimentalShowBlockInterface:function(){return __experimentalShowBlockInterface},__unstableDeleteSelection:function(){return __unstableDeleteSelection},__unstableExpandSelection:function(){return __unstableExpandSelection},__unstableMarkAutomaticChange:function(){return __unstableMarkAutomaticChange},__unstableMarkLastChangeAsPersistent:function(){return __unstableMarkLastChangeAsPersistent},__unstableMarkNextChangeAsNotPersistent:function(){return __unstableMarkNextChangeAsNotPersistent},__unstableSaveReusableBlock:function(){return __unstableSaveReusableBlock},__unstableSetEditorMode:function(){return __unstableSetEditorMode},__unstableSetTemporarilyEditingAsBlocks:function(){return __unstableSetTemporarilyEditingAsBlocks},__unstableSplitSelection:function(){return __unstableSplitSelection},clearSelectedBlock:function(){return clearSelectedBlock},duplicateBlocks:function(){return duplicateBlocks},enterFormattedText:function(){return enterFormattedText},exitFormattedText:function(){return exitFormattedText},flashBlock:function(){return flashBlock},hideInsertionPoint:function(){return hideInsertionPoint},insertAfterBlock:function(){return insertAfterBlock},insertBeforeBlock:function(){return insertBeforeBlock},insertBlock:function(){return insertBlock},insertBlocks:function(){return insertBlocks},insertDefaultBlock:function(){return insertDefaultBlock},mergeBlocks:function(){return mergeBlocks},moveBlockToPosition:function(){return moveBlockToPosition},moveBlocksDown:function(){return moveBlocksDown},moveBlocksToPosition:function(){return moveBlocksToPosition},moveBlocksUp:function(){return moveBlocksUp},multiSelect:function(){return multiSelect},receiveBlocks:function(){return receiveBlocks},removeBlock:function(){return removeBlock},removeBlocks:function(){return removeBlocks},replaceBlock:function(){return replaceBlock},replaceBlocks:function(){return replaceBlocks},replaceInnerBlocks:function(){return replaceInnerBlocks},resetBlocks:function(){return resetBlocks},resetSelection:function(){return resetSelection},selectBlock:function(){return selectBlock},selectNextBlock:function(){return selectNextBlock},selectPreviousBlock:function(){return selectPreviousBlock},selectionChange:function(){return selectionChange},setBlockMovingClientId:function(){return setBlockMovingClientId},setBlockVisibility:function(){return setBlockVisibility},setHasControlledInnerBlocks:function(){return setHasControlledInnerBlocks},setNavigationMode:function(){return setNavigationMode},setTemplateValidity:function(){return setTemplateValidity},showInsertionPoint:function(){return showInsertionPoint},startDraggingBlocks:function(){return startDraggingBlocks},startMultiSelect:function(){return startMultiSelect},startTyping:function(){return startTyping},stopDraggingBlocks:function(){return stopDraggingBlocks},stopMultiSelect:function(){return stopMultiSelect},stopTyping:function(){return stopTyping},synchronizeTemplate:function(){return synchronizeTemplate},toggleBlockHighlight:function(){return toggleBlockHighlight},toggleBlockMode:function(){return toggleBlockMode},toggleSelection:function(){return toggleSelection},updateBlock:function(){return updateBlock},updateBlockAttributes:function(){return updateBlockAttributes},updateBlockListSettings:function(){return updateBlockListSettings},updateSettings:function(){return updateSettings},validateBlocksToTemplate:function(){return validateBlocksToTemplate}});var build_module=__webpack_require__("./packages/data/build-module/index.js"),redux_store=__webpack_require__("./packages/data/build-module/redux-store/index.js"),es6=__webpack_require__("./node_modules/fast-deep-equal/es6/index.js"),es6_default=__webpack_require__.n(es6),lodash=__webpack_require__("./node_modules/lodash/lodash.js"),pipe=__webpack_require__("./packages/compose/build-module/higher-order/pipe.js"),blocks_build_module=__webpack_require__("./packages/blocks/build-module/index.js"),i18n_build_module=__webpack_require__("./packages/i18n/build-module/index.js");const PREFERENCES_DEFAULTS={insertUsage:{}},SETTINGS_DEFAULTS={alignWide:!1,supportsLayout:!0,colors:[{name:(0,i18n_build_module.__)("Black"),slug:"black",color:"#000000"},{name:(0,i18n_build_module.__)("Cyan bluish gray"),slug:"cyan-bluish-gray",color:"#abb8c3"},{name:(0,i18n_build_module.__)("White"),slug:"white",color:"#ffffff"},{name:(0,i18n_build_module.__)("Pale pink"),slug:"pale-pink",color:"#f78da7"},{name:(0,i18n_build_module.__)("Vivid red"),slug:"vivid-red",color:"#cf2e2e"},{name:(0,i18n_build_module.__)("Luminous vivid orange"),slug:"luminous-vivid-orange",color:"#ff6900"},{name:(0,i18n_build_module.__)("Luminous vivid amber"),slug:"luminous-vivid-amber",color:"#fcb900"},{name:(0,i18n_build_module.__)("Light green cyan"),slug:"light-green-cyan",color:"#7bdcb5"},{name:(0,i18n_build_module.__)("Vivid green cyan"),slug:"vivid-green-cyan",color:"#00d084"},{name:(0,i18n_build_module.__)("Pale cyan blue"),slug:"pale-cyan-blue",color:"#8ed1fc"},{name:(0,i18n_build_module.__)("Vivid cyan blue"),slug:"vivid-cyan-blue",color:"#0693e3"},{name:(0,i18n_build_module.__)("Vivid purple"),slug:"vivid-purple",color:"#9b51e0"}],fontSizes:[{name:(0,i18n_build_module._x)("Small","font size name"),size:13,slug:"small"},{name:(0,i18n_build_module._x)("Normal","font size name"),size:16,slug:"normal"},{name:(0,i18n_build_module._x)("Medium","font size name"),size:20,slug:"medium"},{name:(0,i18n_build_module._x)("Large","font size name"),size:36,slug:"large"},{name:(0,i18n_build_module._x)("Huge","font size name"),size:42,slug:"huge"}],imageDefaultSize:"large",imageSizes:[{slug:"thumbnail",name:(0,i18n_build_module.__)("Thumbnail")},{slug:"medium",name:(0,i18n_build_module.__)("Medium")},{slug:"large",name:(0,i18n_build_module.__)("Large")},{slug:"full",name:(0,i18n_build_module.__)("Full Size")}],imageEditing:!0,maxWidth:580,allowedBlockTypes:!0,maxUploadFileSize:0,allowedMimeTypes:null,canLockBlocks:!0,__experimentalCanUserUseUnfilteredHTML:!1,__experimentalClearBlockSelection:!0,__experimentalBlockDirectory:!1,__mobileEnablePageTemplates:!1,__experimentalBlockPatterns:[],__experimentalBlockPatternCategories:[],__unstableGalleryWithImageBlocks:!1,__unstableIsPreviewMode:!1,generateAnchors:!1,gradients:[{name:(0,i18n_build_module.__)("Vivid cyan blue to vivid purple"),gradient:"linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%)",slug:"vivid-cyan-blue-to-vivid-purple"},{name:(0,i18n_build_module.__)("Light green cyan to vivid green cyan"),gradient:"linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%)",slug:"light-green-cyan-to-vivid-green-cyan"},{name:(0,i18n_build_module.__)("Luminous vivid amber to luminous vivid orange"),gradient:"linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%)",slug:"luminous-vivid-amber-to-luminous-vivid-orange"},{name:(0,i18n_build_module.__)("Luminous vivid orange to vivid red"),gradient:"linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%)",slug:"luminous-vivid-orange-to-vivid-red"},{name:(0,i18n_build_module.__)("Very light gray to cyan bluish gray"),gradient:"linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%)",slug:"very-light-gray-to-cyan-bluish-gray"},{name:(0,i18n_build_module.__)("Cool to warm spectrum"),gradient:"linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%)",slug:"cool-to-warm-spectrum"},{name:(0,i18n_build_module.__)("Blush light purple"),gradient:"linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%)",slug:"blush-light-purple"},{name:(0,i18n_build_module.__)("Blush bordeaux"),gradient:"linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%)",slug:"blush-bordeaux"},{name:(0,i18n_build_module.__)("Luminous dusk"),gradient:"linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%)",slug:"luminous-dusk"},{name:(0,i18n_build_module.__)("Pale ocean"),gradient:"linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%)",slug:"pale-ocean"},{name:(0,i18n_build_module.__)("Electric grass"),gradient:"linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%)",slug:"electric-grass"},{name:(0,i18n_build_module.__)("Midnight"),gradient:"linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%)",slug:"midnight"}],__unstableResolvedAssets:{styles:[],scripts:[]}};function insertAt(array,elements,index){return[...array.slice(0,index),...Array.isArray(elements)?elements:[elements],...array.slice(index)]}function moveTo(array,from,to){let count=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;const withoutMovedElements=[...array];return withoutMovedElements.splice(from,count),insertAt(withoutMovedElements,array.slice(from,from+count),to)}const identity=x=>x;function mapBlockOrder(blocks){let rootClientId=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const result=new Map,current=[];return result.set(rootClientId,current),blocks.forEach((block=>{const{clientId:clientId,innerBlocks:innerBlocks}=block;current.push(clientId),mapBlockOrder(innerBlocks,clientId).forEach(((order,subClientId)=>{result.set(subClientId,order)}))})),result}function mapBlockParents(blocks){let rootClientId=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const result=[],stack=[[rootClientId,blocks]];for(;stack.length;){const[parent,currentBlocks]=stack.shift();currentBlocks.forEach((_ref=>{let{innerBlocks:innerBlocks,...block}=_ref;result.push([block.clientId,parent]),null!=innerBlocks&&innerBlocks.length&&stack.push([block.clientId,innerBlocks])}))}return result}function flattenBlocks(blocks){let transform=arguments.length>1&&void 0!==arguments[1]?arguments[1]:identity;const result=[],stack=[...blocks];for(;stack.length;){const{innerBlocks:innerBlocks,...block}=stack.shift();stack.push(...innerBlocks),result.push([block.clientId,transform(block)])}return result}function getFlattenedClientIds(blocks){const result={},stack=[...blocks];for(;stack.length;){const{innerBlocks:innerBlocks,...block}=stack.shift();stack.push(...innerBlocks),result[block.clientId]=!0}return result}function getFlattenedBlocksWithoutAttributes(blocks){return flattenBlocks(blocks,(block=>(0,lodash.omit)(block,"attributes")))}function getFlattenedBlockAttributes(blocks){return flattenBlocks(blocks,(block=>block.attributes))}function isUpdatingSameBlockAttribute(action,lastAction){return"UPDATE_BLOCK_ATTRIBUTES"===action.type&&void 0!==lastAction&&"UPDATE_BLOCK_ATTRIBUTES"===lastAction.type&&es6_default()(action.clientIds,lastAction.clientIds)&&function hasSameKeys(a,b){return es6_default()(Object.keys(a),Object.keys(b))}(action.attributes,lastAction.attributes)}function updateBlockTreeForBlocks(state,blocks){const treeToUpdate=state.tree,stack=[...blocks],flattenedBlocks=[...blocks];for(;stack.length;){const block=stack.shift();stack.push(...block.innerBlocks),flattenedBlocks.push(...block.innerBlocks)}for(const block of flattenedBlocks)treeToUpdate.set(block.clientId,{});for(const block of flattenedBlocks)treeToUpdate.set(block.clientId,Object.assign(treeToUpdate.get(block.clientId),{...state.byClientId.get(block.clientId),attributes:state.attributes.get(block.clientId),innerBlocks:block.innerBlocks.map((subBlock=>treeToUpdate.get(subBlock.clientId)))}))}function updateParentInnerBlocksInTree(state,updatedClientIds){let updateChildrenOfUpdatedClientIds=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const treeToUpdate=state.tree,uncontrolledParents=new Set([]),controlledParents=new Set;for(const clientId of updatedClientIds){let current=updateChildrenOfUpdatedClientIds?clientId:state.parents.get(clientId);do{if(state.controlledInnerBlocks[current]){controlledParents.add(current);break}uncontrolledParents.add(current),current=state.parents.get(current)}while(void 0!==current)}for(const clientId of uncontrolledParents)treeToUpdate.set(clientId,{...treeToUpdate.get(clientId)});for(const clientId of uncontrolledParents)treeToUpdate.get(clientId).innerBlocks=(state.order.get(clientId)||[]).map((subClientId=>treeToUpdate.get(subClientId)));for(const clientId of controlledParents)treeToUpdate.set("controlled||"+clientId,{innerBlocks:(state.order.get(clientId)||[]).map((subClientId=>treeToUpdate.get(subClientId)))})}const blocks=(0,pipe.Z)(build_module.UY,(reducer=>(state,action)=>{if(state&&"SAVE_REUSABLE_BLOCK_SUCCESS"===action.type){const{id:id,updatedId:updatedId}=action;if(id===updatedId)return state;(state={...state}).attributes=new Map(state.attributes),state.attributes.forEach(((attributes,clientId)=>{const{name:name}=state.byClientId.get(clientId);"core/block"===name&&attributes.ref===id&&state.attributes.set(clientId,{...attributes,ref:updatedId})}))}return reducer(state,action)}),(reducer=>function(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},action=arguments.length>1?arguments[1]:void 0;const newState=reducer(state,action);if(newState===state)return state;switch(newState.tree=state.tree?state.tree:new Map,action.type){case"RECEIVE_BLOCKS":case"INSERT_BLOCKS":newState.tree=new Map(newState.tree),updateBlockTreeForBlocks(newState,action.blocks),updateParentInnerBlocksInTree(newState,action.rootClientId?[action.rootClientId]:[""],!0);break;case"UPDATE_BLOCK":newState.tree=new Map(newState.tree),newState.tree.set(action.clientId,{...newState.tree.get(action.clientId),...newState.byClientId.get(action.clientId),attributes:newState.attributes.get(action.clientId)}),updateParentInnerBlocksInTree(newState,[action.clientId],!1);break;case"UPDATE_BLOCK_ATTRIBUTES":newState.tree=new Map(newState.tree),action.clientIds.forEach((clientId=>{newState.tree.set(clientId,{...newState.tree.get(clientId),attributes:newState.attributes.get(clientId)})})),updateParentInnerBlocksInTree(newState,action.clientIds,!1);break;case"REPLACE_BLOCKS_AUGMENTED_WITH_CHILDREN":{const inserterClientIds=getFlattenedClientIds(action.blocks);newState.tree=new Map(newState.tree),action.replacedClientIds.concat(action.replacedClientIds.filter((clientId=>!inserterClientIds[clientId])).map((clientId=>"controlled||"+clientId))).forEach((key=>{newState.tree.delete(key)})),updateBlockTreeForBlocks(newState,action.blocks),updateParentInnerBlocksInTree(newState,action.blocks.map((b=>b.clientId)),!1);const parentsOfRemovedBlocks=[];for(const clientId of action.clientIds)void 0===state.parents.get(clientId)||""!==state.parents.get(clientId)&&!newState.byClientId.get(state.parents.get(clientId))||parentsOfRemovedBlocks.push(state.parents.get(clientId));updateParentInnerBlocksInTree(newState,parentsOfRemovedBlocks,!0);break}case"REMOVE_BLOCKS_AUGMENTED_WITH_CHILDREN":const parentsOfRemovedBlocks=[];for(const clientId of action.clientIds)void 0===state.parents.get(clientId)||""!==state.parents.get(clientId)&&!newState.byClientId.get(state.parents.get(clientId))||parentsOfRemovedBlocks.push(state.parents.get(clientId));newState.tree=new Map(newState.tree),action.removedClientIds.concat(action.removedClientIds.map((clientId=>"controlled||"+clientId))).forEach((key=>{newState.tree.delete(key)})),updateParentInnerBlocksInTree(newState,parentsOfRemovedBlocks,!0);break;case"MOVE_BLOCKS_TO_POSITION":{const updatedBlockUids=[];action.fromRootClientId?updatedBlockUids.push(action.fromRootClientId):updatedBlockUids.push(""),action.toRootClientId&&updatedBlockUids.push(action.toRootClientId),newState.tree=new Map(newState.tree),updateParentInnerBlocksInTree(newState,updatedBlockUids,!0);break}case"MOVE_BLOCKS_UP":case"MOVE_BLOCKS_DOWN":{const updatedBlockUids=[action.rootClientId?action.rootClientId:""];newState.tree=new Map(newState.tree),updateParentInnerBlocksInTree(newState,updatedBlockUids,!0);break}case"SAVE_REUSABLE_BLOCK_SUCCESS":{const updatedBlockUids=[];newState.attributes.forEach(((attributes,clientId)=>{"core/block"===newState.byClientId.get(clientId).name&&attributes.ref===action.updatedId&&updatedBlockUids.push(clientId)})),newState.tree=new Map(newState.tree),updatedBlockUids.forEach((clientId=>{newState.tree.set(clientId,{...newState.byClientId.get(clientId),attributes:newState.attributes.get(clientId),innerBlocks:newState.tree.get(clientId).innerBlocks})})),updateParentInnerBlocksInTree(newState,updatedBlockUids,!1)}}return newState}),(reducer=>(state,action)=>{const getAllChildren=clientIds=>{let result=clientIds;for(let i=0;i<result.length;i++)!state.order.get(result[i])||action.keepControlledInnerBlocks&&action.keepControlledInnerBlocks[result[i]]||(result===clientIds&&(result=[...result]),result.push(...state.order.get(result[i])));return result};if(state)switch(action.type){case"REMOVE_BLOCKS":action={...action,type:"REMOVE_BLOCKS_AUGMENTED_WITH_CHILDREN",removedClientIds:getAllChildren(action.clientIds)};break;case"REPLACE_BLOCKS":action={...action,type:"REPLACE_BLOCKS_AUGMENTED_WITH_CHILDREN",replacedClientIds:getAllChildren(action.clientIds)}}return reducer(state,action)}),(reducer=>(state,action)=>{if("REPLACE_INNER_BLOCKS"!==action.type)return reducer(state,action);const nestedControllers={};if(Object.keys(state.controlledInnerBlocks).length){const stack=[...action.blocks];for(;stack.length;){const{innerBlocks:innerBlocks,...block}=stack.shift();stack.push(...innerBlocks),state.controlledInnerBlocks[block.clientId]&&(nestedControllers[block.clientId]=!0)}}let stateAfterBlocksRemoval=state;state.order.get(action.rootClientId)&&(stateAfterBlocksRemoval=reducer(stateAfterBlocksRemoval,{type:"REMOVE_BLOCKS",keepControlledInnerBlocks:nestedControllers,clientIds:state.order.get(action.rootClientId)}));let stateAfterInsert=stateAfterBlocksRemoval;if(action.blocks.length){stateAfterInsert=reducer(stateAfterInsert,{...action,type:"INSERT_BLOCKS",index:0});const stateAfterInsertOrder=new Map(stateAfterInsert.order);Object.keys(nestedControllers).forEach((key=>{state.order.get(key)&&stateAfterInsertOrder.set(key,state.order.get(key))})),stateAfterInsert.order=stateAfterInsertOrder,stateAfterInsert.tree=new Map(stateAfterInsert.tree),Object.keys(nestedControllers).forEach((_key=>{const key=`controlled||${_key}`;state.tree.has(key)&&stateAfterInsert.tree.set(key,state.tree.get(key))}))}return stateAfterInsert}),(reducer=>(state,action)=>{if("RESET_BLOCKS"===action.type){const newState={...state,byClientId:new Map(getFlattenedBlocksWithoutAttributes(action.blocks)),attributes:new Map(getFlattenedBlockAttributes(action.blocks)),order:mapBlockOrder(action.blocks),parents:new Map(mapBlockParents(action.blocks)),controlledInnerBlocks:{}};return newState.tree=new Map(null==state?void 0:state.tree),updateBlockTreeForBlocks(newState,action.blocks),newState.tree.set("",{innerBlocks:action.blocks.map((subBlock=>newState.tree.get(subBlock.clientId)))}),newState}return reducer(state,action)}),(function withPersistentBlockChange(reducer){let lastAction,markNextChangeAsNotPersistent=!1;return(state,action)=>{let nextState=reducer(state,action);const isExplicitPersistentChange="MARK_LAST_CHANGE_AS_PERSISTENT"===action.type||markNextChangeAsNotPersistent;if(state===nextState&&!isExplicitPersistentChange){var _state$isPersistentCh;markNextChangeAsNotPersistent="MARK_NEXT_CHANGE_AS_NOT_PERSISTENT"===action.type;const nextIsPersistentChange=null===(_state$isPersistentCh=null==state?void 0:state.isPersistentChange)||void 0===_state$isPersistentCh||_state$isPersistentCh;return state.isPersistentChange===nextIsPersistentChange?state:{...nextState,isPersistentChange:nextIsPersistentChange}}return nextState={...nextState,isPersistentChange:isExplicitPersistentChange?!markNextChangeAsNotPersistent:!isUpdatingSameBlockAttribute(action,lastAction)},lastAction=action,markNextChangeAsNotPersistent="MARK_NEXT_CHANGE_AS_NOT_PERSISTENT"===action.type,nextState}}),(function withIgnoredBlockChange(reducer){const IGNORED_ACTION_TYPES=new Set(["RECEIVE_BLOCKS"]);return(state,action)=>{const nextState=reducer(state,action);return nextState!==state&&(nextState.isIgnoredChange=IGNORED_ACTION_TYPES.has(action.type)),nextState}}),(reducer=>(state,action)=>{if("SET_HAS_CONTROLLED_INNER_BLOCKS"===action.type){const tempState=reducer(state,{type:"REPLACE_INNER_BLOCKS",rootClientId:action.clientId,blocks:[]});return reducer(tempState,action)}return reducer(state,action)}))({byClientId(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"RECEIVE_BLOCKS":case"INSERT_BLOCKS":{const newState=new Map(state);return getFlattenedBlocksWithoutAttributes(action.blocks).forEach((_ref2=>{let[key,value]=_ref2;newState.set(key,value)})),newState}case"UPDATE_BLOCK":{if(!state.has(action.clientId))return state;const changes=(0,lodash.omit)(action.updates,"attributes");if((0,lodash.isEmpty)(changes))return state;const newState=new Map(state);return newState.set(action.clientId,{...state.get(action.clientId),...changes}),newState}case"REPLACE_BLOCKS_AUGMENTED_WITH_CHILDREN":{if(!action.blocks)return state;const newState=new Map(state);return action.replacedClientIds.forEach((clientId=>{newState.delete(clientId)})),getFlattenedBlocksWithoutAttributes(action.blocks).forEach((_ref3=>{let[key,value]=_ref3;newState.set(key,value)})),newState}case"REMOVE_BLOCKS_AUGMENTED_WITH_CHILDREN":{const newState=new Map(state);return action.removedClientIds.forEach((clientId=>{newState.delete(clientId)})),newState}}return state},attributes(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"RECEIVE_BLOCKS":case"INSERT_BLOCKS":{const newState=new Map(state);return getFlattenedBlockAttributes(action.blocks).forEach((_ref4=>{let[key,value]=_ref4;newState.set(key,value)})),newState}case"UPDATE_BLOCK":{if(!state.get(action.clientId)||!action.updates.attributes)return state;const newState=new Map(state);return newState.set(action.clientId,{...state.get(action.clientId),...action.updates.attributes}),newState}case"UPDATE_BLOCK_ATTRIBUTES":{if(action.clientIds.every((id=>!state.get(id))))return state;let hasChange=!1;const newState=new Map(state);for(const clientId of action.clientIds){var _action$attributes;const updatedAttributeEntries=Object.entries(action.uniqueByBlock?action.attributes[clientId]:null!==(_action$attributes=action.attributes)&&void 0!==_action$attributes?_action$attributes:{});if(0===updatedAttributeEntries.length)continue;let hasUpdatedAttributes=!1;const existingAttributes=state.get(clientId),newAttributes={};updatedAttributeEntries.forEach((_ref5=>{let[key,value]=_ref5;existingAttributes[key]!==value&&(hasUpdatedAttributes=!0,newAttributes[key]=value)})),hasChange=hasChange||hasUpdatedAttributes,hasUpdatedAttributes&&newState.set(clientId,{...existingAttributes,...newAttributes})}return hasChange?newState:state}case"REPLACE_BLOCKS_AUGMENTED_WITH_CHILDREN":{if(!action.blocks)return state;const newState=new Map(state);return action.replacedClientIds.forEach((clientId=>{newState.delete(clientId)})),getFlattenedBlockAttributes(action.blocks).forEach((_ref6=>{let[key,value]=_ref6;newState.set(key,value)})),newState}case"REMOVE_BLOCKS_AUGMENTED_WITH_CHILDREN":{const newState=new Map(state);return action.removedClientIds.forEach((clientId=>{newState.delete(clientId)})),newState}}return state},order(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"RECEIVE_BLOCKS":{var _state$get;const blockOrder=mapBlockOrder(action.blocks),newState=new Map(state);return blockOrder.forEach(((order,clientId)=>{""!==clientId&&newState.set(clientId,order)})),newState.set("",(null!==(_state$get=state.get(""))&&void 0!==_state$get?_state$get:[]).concat(blockOrder[""])),newState}case"INSERT_BLOCKS":{const{rootClientId:rootClientId=""}=action,subState=state.get(rootClientId)||[],mappedBlocks=mapBlockOrder(action.blocks,rootClientId),{index:index=subState.length}=action,newState=new Map(state);return mappedBlocks.forEach(((order,clientId)=>{newState.set(clientId,order)})),newState.set(rootClientId,insertAt(subState,mappedBlocks.get(rootClientId),index)),newState}case"MOVE_BLOCKS_TO_POSITION":{var _state$get$filter,_state$get2;const{fromRootClientId:fromRootClientId="",toRootClientId:toRootClientId="",clientIds:clientIds}=action,{index:index=state.get(toRootClientId).length}=action;if(fromRootClientId===toRootClientId){const fromIndex=state.get(toRootClientId).indexOf(clientIds[0]),newState=new Map(state);return newState.set(toRootClientId,moveTo(state.get(toRootClientId),fromIndex,index,clientIds.length)),newState}const newState=new Map(state);return newState.set(fromRootClientId,null!==(_state$get$filter=null===(_state$get2=state.get(fromRootClientId))||void 0===_state$get2?void 0:_state$get2.filter((id=>!clientIds.includes(id))))&&void 0!==_state$get$filter?_state$get$filter:[]),newState.set(toRootClientId,insertAt(state.get(toRootClientId),clientIds,index)),newState}case"MOVE_BLOCKS_UP":{const{clientIds:clientIds,rootClientId:rootClientId=""}=action,firstClientId=clientIds[0],subState=state.get(rootClientId);if(!subState.length||firstClientId===subState[0])return state;const firstIndex=subState.indexOf(firstClientId),newState=new Map(state);return newState.set(rootClientId,moveTo(subState,firstIndex,firstIndex-1,clientIds.length)),newState}case"MOVE_BLOCKS_DOWN":{const{clientIds:clientIds,rootClientId:rootClientId=""}=action,firstClientId=clientIds[0],lastClientId=clientIds[clientIds.length-1],subState=state.get(rootClientId);if(!subState.length||lastClientId===subState[subState.length-1])return state;const firstIndex=subState.indexOf(firstClientId),newState=new Map(state);return newState.set(rootClientId,moveTo(subState,firstIndex,firstIndex+1,clientIds.length)),newState}case"REPLACE_BLOCKS_AUGMENTED_WITH_CHILDREN":{const{clientIds:clientIds}=action;if(!action.blocks)return state;const mappedBlocks=mapBlockOrder(action.blocks),newState=new Map(state);return action.replacedClientIds.forEach((clientId=>{newState.delete(clientId)})),mappedBlocks.forEach(((order,clientId)=>{""!==clientId&&newState.set(clientId,order)})),newState.forEach(((order,clientId)=>{const newSubOrder=Object.values(order).reduce(((result,subClientId)=>subClientId===clientIds[0]?[...result,...mappedBlocks.get("")]:(-1===clientIds.indexOf(subClientId)&&result.push(subClientId),result)),[]);newState.set(clientId,newSubOrder)})),newState}case"REMOVE_BLOCKS_AUGMENTED_WITH_CHILDREN":{const newState=new Map(state);return action.removedClientIds.forEach((clientId=>{newState.delete(clientId)})),newState.forEach(((order,clientId)=>{var _order$filter;const newSubOrder=null!==(_order$filter=null==order?void 0:order.filter((id=>!action.removedClientIds.includes(id))))&&void 0!==_order$filter?_order$filter:[];newSubOrder.length!==order.length&&newState.set(clientId,newSubOrder)})),newState}}return state},parents(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"RECEIVE_BLOCKS":{const newState=new Map(state);return mapBlockParents(action.blocks).forEach((_ref7=>{let[key,value]=_ref7;newState.set(key,value)})),newState}case"INSERT_BLOCKS":{const newState=new Map(state);return mapBlockParents(action.blocks,action.rootClientId||"").forEach((_ref8=>{let[key,value]=_ref8;newState.set(key,value)})),newState}case"MOVE_BLOCKS_TO_POSITION":{const newState=new Map(state);return action.clientIds.forEach((id=>{newState.set(id,action.toRootClientId||"")})),newState}case"REPLACE_BLOCKS_AUGMENTED_WITH_CHILDREN":{const newState=new Map(state);return action.replacedClientIds.forEach((clientId=>{newState.delete(clientId)})),mapBlockParents(action.blocks,state.get(action.clientIds[0])).forEach((_ref9=>{let[key,value]=_ref9;newState.set(key,value)})),newState}case"REMOVE_BLOCKS_AUGMENTED_WITH_CHILDREN":{const newState=new Map(state);return action.removedClientIds.forEach((clientId=>{newState.delete(clientId)})),newState}}return state},controlledInnerBlocks(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{type:type,clientId:clientId,hasControlledInnerBlocks:hasControlledInnerBlocks}=arguments.length>1?arguments[1]:void 0;return"SET_HAS_CONTROLLED_INNER_BLOCKS"===type?{...state,[clientId]:hasControlledInnerBlocks}:state}});function selectionHelper(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"CLEAR_SELECTED_BLOCK":return state.clientId?{}:state;case"SELECT_BLOCK":return action.clientId===state.clientId?state:{clientId:action.clientId};case"REPLACE_INNER_BLOCKS":case"INSERT_BLOCKS":return action.updateSelection&&action.blocks.length?{clientId:action.blocks[0].clientId}:state;case"REMOVE_BLOCKS":return action.clientIds&&action.clientIds.length&&-1!==action.clientIds.indexOf(state.clientId)?{}:state;case"REPLACE_BLOCKS":{if(-1===action.clientIds.indexOf(state.clientId))return state;const blockToSelect=action.blocks[action.indexToSelect]||action.blocks[action.blocks.length-1];return blockToSelect?blockToSelect.clientId===state.clientId?state:{clientId:blockToSelect.clientId}:{}}}return state}var reducer=(0,build_module.UY)({blocks:blocks,isTyping:function isTyping(){let state=arguments.length>0&&void 0!==arguments[0]&&arguments[0],action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"START_TYPING":return!0;case"STOP_TYPING":return!1}return state},isBlockInterfaceHidden:function isBlockInterfaceHidden(){let state=arguments.length>0&&void 0!==arguments[0]&&arguments[0],action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"HIDE_BLOCK_INTERFACE":return!0;case"SHOW_BLOCK_INTERFACE":return!1}return state},draggedBlocks:function draggedBlocks(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"START_DRAGGING_BLOCKS":return action.clientIds;case"STOP_DRAGGING_BLOCKS":return[]}return state},selection:function selection(){var _state$selectionStart,_state$selectionEnd,_state$selectionStart2,_state$selectionEnd2;let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"SELECTION_CHANGE":return action.clientId?{selectionStart:{clientId:action.clientId,attributeKey:action.attributeKey,offset:action.startOffset},selectionEnd:{clientId:action.clientId,attributeKey:action.attributeKey,offset:action.endOffset}}:{selectionStart:action.start||state.selectionStart,selectionEnd:action.end||state.selectionEnd};case"RESET_SELECTION":const{selectionStart:selectionStart,selectionEnd:selectionEnd}=action;return{selectionStart:selectionStart,selectionEnd:selectionEnd};case"MULTI_SELECT":const{start:start,end:end}=action;return start===(null===(_state$selectionStart=state.selectionStart)||void 0===_state$selectionStart?void 0:_state$selectionStart.clientId)&&end===(null===(_state$selectionEnd=state.selectionEnd)||void 0===_state$selectionEnd?void 0:_state$selectionEnd.clientId)?state:{selectionStart:{clientId:start},selectionEnd:{clientId:end}};case"RESET_BLOCKS":const startClientId=null==state||null===(_state$selectionStart2=state.selectionStart)||void 0===_state$selectionStart2?void 0:_state$selectionStart2.clientId,endClientId=null==state||null===(_state$selectionEnd2=state.selectionEnd)||void 0===_state$selectionEnd2?void 0:_state$selectionEnd2.clientId;if(!startClientId&&!endClientId)return state;if(!action.blocks.some((block=>block.clientId===startClientId)))return{selectionStart:{},selectionEnd:{}};if(!action.blocks.some((block=>block.clientId===endClientId)))return{...state,selectionEnd:state.selectionStart}}return{selectionStart:selectionHelper(state.selectionStart,action),selectionEnd:selectionHelper(state.selectionEnd,action)}},isMultiSelecting:function isMultiSelecting(){let state=arguments.length>0&&void 0!==arguments[0]&&arguments[0],action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"START_MULTI_SELECT":return!0;case"STOP_MULTI_SELECT":return!1}return state},isSelectionEnabled:function isSelectionEnabled(){let state=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],action=arguments.length>1?arguments[1]:void 0;return"TOGGLE_SELECTION"===action.type?action.isSelectionEnabled:state},initialPosition:function initialPosition(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,action=arguments.length>1?arguments[1]:void 0;return"REPLACE_BLOCKS"===action.type&&void 0!==action.initialPosition||["MULTI_SELECT","SELECT_BLOCK","RESET_SELECTION","INSERT_BLOCKS","REPLACE_INNER_BLOCKS"].includes(action.type)?action.initialPosition:state},blocksMode:function blocksMode(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},action=arguments.length>1?arguments[1]:void 0;if("TOGGLE_BLOCK_MODE"===action.type){const{clientId:clientId}=action;return{...state,[clientId]:state[clientId]&&"html"===state[clientId]?"visual":"html"}}return state},blockListSettings:function(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"REPLACE_BLOCKS":case"REMOVE_BLOCKS":return(0,lodash.omit)(state,action.clientIds);case"UPDATE_BLOCK_LIST_SETTINGS":{const{clientId:clientId}=action;return action.settings?es6_default()(state[clientId],action.settings)?state:{...state,[clientId]:action.settings}:state.hasOwnProperty(clientId)?(0,lodash.omit)(state,clientId):state}}return state},insertionPoint:function insertionPoint(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"SHOW_INSERTION_POINT":{const{rootClientId:rootClientId,index:index,__unstableWithInserter:__unstableWithInserter,operation:operation}=action,nextState={rootClientId:rootClientId,index:index,__unstableWithInserter:__unstableWithInserter,operation:operation};return es6_default()(state,nextState)?state:nextState}case"HIDE_INSERTION_POINT":return null}return state},template:function template(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{isValid:!0},action=arguments.length>1?arguments[1]:void 0;return"SET_TEMPLATE_VALIDITY"===action.type?{...state,isValid:action.isValid}:state},settings:function settings(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:SETTINGS_DEFAULTS,action=arguments.length>1?arguments[1]:void 0;return"UPDATE_SETTINGS"===action.type?{...state,...action.settings}:state},preferences:function preferences(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:PREFERENCES_DEFAULTS,action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"INSERT_BLOCKS":case"REPLACE_BLOCKS":return action.blocks.reduce(((prevState,block)=>{const{attributes:attributes,name:blockName}=block,match=(0,build_module.Ys)(blocks_build_module.h).getActiveBlockVariation(blockName,attributes);let id=null!=match&&match.name?`${blockName}/${match.name}`:blockName;const insert={name:id};return"core/block"===blockName&&(insert.ref=attributes.ref,id+="/"+attributes.ref),{...prevState,insertUsage:{...prevState.insertUsage,[id]:{time:action.time,count:prevState.insertUsage[id]?prevState.insertUsage[id].count+1:1,insert:insert}}}}),state)}return state},lastBlockAttributesChange:function lastBlockAttributesChange(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"UPDATE_BLOCK":if(!action.updates.attributes)break;return{[action.clientId]:action.updates.attributes};case"UPDATE_BLOCK_ATTRIBUTES":return action.clientIds.reduce(((accumulator,id)=>({...accumulator,[id]:action.uniqueByBlock?action.attributes[id]:action.attributes})),{})}return state},editorMode:function editorMode(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"edit",action=arguments.length>1?arguments[1]:void 0;return"INSERT_BLOCKS"===action.type&&"navigation"===state?"edit":"SET_EDITOR_MODE"===action.type?action.mode:state},hasBlockMovingClientId:function hasBlockMovingClientId(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,action=arguments.length>1?arguments[1]:void 0;return"SET_BLOCK_MOVING_MODE"===action.type?action.hasBlockMovingClientId:"SET_EDITOR_MODE"===action.type?null:state},automaticChangeStatus:function automaticChangeStatus(state,action){switch(action.type){case"MARK_AUTOMATIC_CHANGE":return"pending";case"MARK_AUTOMATIC_CHANGE_FINAL":return"pending"===state?"final":void 0;case"SELECTION_CHANGE":return"final"!==state?state:void 0;case"SET_BLOCK_VISIBILITY":case"START_TYPING":case"STOP_TYPING":case"UPDATE_BLOCK_LIST_SETTINGS":return state}},highlightedBlock:function highlightedBlock(state,action){switch(action.type){case"TOGGLE_BLOCK_HIGHLIGHT":const{clientId:clientId,isHighlighted:isHighlighted}=action;return isHighlighted?clientId:state===clientId?null:state;case"SELECT_BLOCK":if(action.clientId!==state)return null}return state},lastBlockInserted:function lastBlockInserted(){var _action$meta;let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"INSERT_BLOCKS":if(!action.blocks.length)return state;return{clientId:action.blocks[0].clientId,source:null===(_action$meta=action.meta)||void 0===_action$meta?void 0:_action$meta.source};case"RESET_BLOCKS":return{}}return state},temporarilyEditingAsBlocks:function temporarilyEditingAsBlocks(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",action=arguments.length>1?arguments[1]:void 0;return"SET_TEMPORARILY_EDITING_AS_BLOCKS"===action.type?action.temporarilyEditingAsBlocks:state},blockVisibility:function blockVisibility(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},action=arguments.length>1?arguments[1]:void 0;return"SET_BLOCK_VISIBILITY"===action.type?{...state,...action.updates}:state}}),rememo=__webpack_require__("./node_modules/rememo/es/rememo.js"),platform=__webpack_require__("./packages/element/build-module/platform.js"),hooks_build_module=__webpack_require__("./packages/hooks/build-module/index.js"),symbol=__webpack_require__("./packages/icons/build-module/library/symbol.js"),rich_text_build_module=__webpack_require__("./packages/rich-text/build-module/index.js"),deprecated_build_module=__webpack_require__("./packages/deprecated/build-module/index.js");function mapRichTextSettings(attributeDefinition){const{multiline:multilineTag,__unstableMultilineWrapperTags:multilineWrapperTags,__unstablePreserveWhiteSpace:preserveWhiteSpace}=attributeDefinition;return{multilineTag:multilineTag,multilineWrapperTags:multilineWrapperTags,preserveWhiteSpace:preserveWhiteSpace}}var sorting=__webpack_require__("./packages/block-editor/src/utils/sorting.js");const EMPTY_ARRAY=[];function getBlockName(state,clientId){const block=state.blocks.byClientId.get(clientId);if("web"!==platform.Z.OS&&"core/social-link"===(null==block?void 0:block.name)){const attributes=state.blocks.attributes.get(clientId),{service:service}=null!=attributes?attributes:{};return service?`core/social-link-${service}`:"core/social-link"}return block?block.name:null}function isBlockValid(state,clientId){const block=state.blocks.byClientId.get(clientId);return!!block&&block.isValid}function getBlockAttributes(state,clientId){return state.blocks.byClientId.get(clientId)?state.blocks.attributes.get(clientId):null}function getBlock(state,clientId){return state.blocks.byClientId.has(clientId)?state.blocks.tree.get(clientId):null}const __unstableGetBlockWithoutInnerBlocks=(0,rememo.Z)(((state,clientId)=>state.blocks.byClientId.has(clientId)?{...state.blocks.byClientId.get(clientId),attributes:getBlockAttributes(state,clientId)}:null),((state,clientId)=>[state.blocks.byClientId.get(clientId),state.blocks.attributes.get(clientId)]));function getBlocks(state,rootClientId){var _state$blocks$tree$ge;const treeKey=rootClientId&&areInnerBlocksControlled(state,rootClientId)?"controlled||"+rootClientId:rootClientId||"";return(null===(_state$blocks$tree$ge=state.blocks.tree.get(treeKey))||void 0===_state$blocks$tree$ge?void 0:_state$blocks$tree$ge.innerBlocks)||EMPTY_ARRAY}const __unstableGetClientIdWithClientIdsTree=(0,rememo.Z)(((state,clientId)=>({clientId:clientId,innerBlocks:__unstableGetClientIdsTree(state,clientId)})),(state=>[state.blocks.order])),__unstableGetClientIdsTree=(0,rememo.Z)((function(state){let rootClientId=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return(0,lodash.map)(getBlockOrder(state,rootClientId),(clientId=>__unstableGetClientIdWithClientIdsTree(state,clientId)))}),(state=>[state.blocks.order])),getClientIdsOfDescendants=(0,rememo.Z)(((state,clientIds)=>{const collectedIds=[];for(const givenId of clientIds)for(const descendantId of getBlockOrder(state,givenId))collectedIds.push(descendantId,...getClientIdsOfDescendants(state,[descendantId]));return collectedIds}),(state=>[state.blocks.order])),getClientIdsWithDescendants=(0,rememo.Z)((state=>{const collectedIds=[];for(const topLevelId of getBlockOrder(state))collectedIds.push(topLevelId,...getClientIdsOfDescendants(state,[topLevelId]));return collectedIds}),(state=>[state.blocks.order])),getGlobalBlockCount=(0,rememo.Z)(((state,blockName)=>{const clientIds=getClientIdsWithDescendants(state);return blockName?clientIds.reduce(((accumulator,clientId)=>state.blocks.byClientId.get(clientId).name===blockName?accumulator+1:accumulator),0):clientIds.length}),(state=>[state.blocks.order,state.blocks.byClientId])),__experimentalGetGlobalBlocksByName=(0,rememo.Z)(((state,blockName)=>{if(!blockName)return EMPTY_ARRAY;const foundBlocks=getClientIdsWithDescendants(state).filter((clientId=>state.blocks.byClientId.get(clientId).name===blockName));return foundBlocks.length>0?foundBlocks:EMPTY_ARRAY}),(state=>[state.blocks.order,state.blocks.byClientId])),getBlocksByClientId=(0,rememo.Z)(((state,clientIds)=>(0,lodash.map)(Array.isArray(clientIds)?clientIds:[clientIds],(clientId=>getBlock(state,clientId)))),((state,clientIds)=>(0,lodash.map)(Array.isArray(clientIds)?clientIds:[clientIds],(clientId=>state.blocks.tree.get(clientId)))));function getBlockCount(state,rootClientId){return getBlockOrder(state,rootClientId).length}function getSelectionStart(state){return state.selection.selectionStart}function getSelectionEnd(state){return state.selection.selectionEnd}function getBlockSelectionStart(state){return state.selection.selectionStart.clientId}function getBlockSelectionEnd(state){return state.selection.selectionEnd.clientId}function getSelectedBlockCount(state){const multiSelectedBlockCount=getMultiSelectedBlockClientIds(state).length;return multiSelectedBlockCount||(state.selection.selectionStart.clientId?1:0)}function hasSelectedBlock(state){const{selectionStart:selectionStart,selectionEnd:selectionEnd}=state.selection;return!!selectionStart.clientId&&selectionStart.clientId===selectionEnd.clientId}function getSelectedBlockClientId(state){const{selectionStart:selectionStart,selectionEnd:selectionEnd}=state.selection,{clientId:clientId}=selectionStart;return clientId&&clientId===selectionEnd.clientId?clientId:null}function getSelectedBlock(state){const clientId=getSelectedBlockClientId(state);return clientId?getBlock(state,clientId):null}function getBlockRootClientId(state,clientId){return state.blocks.parents.has(clientId)?state.blocks.parents.get(clientId):null}const getBlockParents=(0,rememo.Z)((function(state,clientId){let ascending=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const parents=[];let current=clientId;for(;state.blocks.parents.get(current);)current=state.blocks.parents.get(current),parents.push(current);return ascending?parents:parents.reverse()}),(state=>[state.blocks.parents])),getBlockParentsByBlockName=(0,rememo.Z)((function(state,clientId,blockName){let ascending=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const parents=getBlockParents(state,clientId,ascending);return(0,lodash.map)((0,lodash.map)(parents,(id=>({id:id,name:getBlockName(state,id)}))).filter((_ref=>{let{name:name}=_ref;return Array.isArray(blockName)?blockName.includes(name):name===blockName})),(_ref2=>{let{id:id}=_ref2;return id}))}),(state=>[state.blocks.parents]));function getBlockHierarchyRootClientId(state,clientId){let parent,current=clientId;do{parent=current,current=state.blocks.parents.get(current)}while(current);return parent}function getLowestCommonAncestorWithSelectedBlock(state,clientId){const selectedId=getSelectedBlockClientId(state),clientParents=[...getBlockParents(state,clientId),clientId],selectedParents=[...getBlockParents(state,selectedId),selectedId];let lowestCommonAncestor;const maxDepth=Math.min(clientParents.length,selectedParents.length);for(let index=0;index<maxDepth&&clientParents[index]===selectedParents[index];index++)lowestCommonAncestor=clientParents[index];return lowestCommonAncestor}function getAdjacentBlockClientId(state,startClientId){let modifier=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;if(void 0===startClientId&&(startClientId=getSelectedBlockClientId(state)),void 0===startClientId&&(startClientId=modifier<0?getFirstMultiSelectedBlockClientId(state):getLastMultiSelectedBlockClientId(state)),!startClientId)return null;const rootClientId=getBlockRootClientId(state,startClientId);if(null===rootClientId)return null;const{order:order}=state.blocks,orderSet=order.get(rootClientId),index=orderSet.indexOf(startClientId),nextIndex=index+1*modifier;return nextIndex<0||nextIndex===orderSet.length?null:orderSet[nextIndex]}function getPreviousBlockClientId(state,startClientId){return getAdjacentBlockClientId(state,startClientId,-1)}function getNextBlockClientId(state,startClientId){return getAdjacentBlockClientId(state,startClientId,1)}function getSelectedBlocksInitialCaretPosition(state){return state.initialPosition}const getSelectedBlockClientIds=(0,rememo.Z)((state=>{const{selectionStart:selectionStart,selectionEnd:selectionEnd}=state.selection;if(!selectionStart.clientId||!selectionEnd.clientId)return EMPTY_ARRAY;if(selectionStart.clientId===selectionEnd.clientId)return[selectionStart.clientId];const rootClientId=getBlockRootClientId(state,selectionStart.clientId);if(null===rootClientId)return EMPTY_ARRAY;const blockOrder=getBlockOrder(state,rootClientId),startIndex=blockOrder.indexOf(selectionStart.clientId),endIndex=blockOrder.indexOf(selectionEnd.clientId);return startIndex>endIndex?blockOrder.slice(endIndex,startIndex+1):blockOrder.slice(startIndex,endIndex+1)}),(state=>[state.blocks.order,state.selection.selectionStart.clientId,state.selection.selectionEnd.clientId]));function getMultiSelectedBlockClientIds(state){const{selectionStart:selectionStart,selectionEnd:selectionEnd}=state.selection;return selectionStart.clientId===selectionEnd.clientId?EMPTY_ARRAY:getSelectedBlockClientIds(state)}const getMultiSelectedBlocks=(0,rememo.Z)((state=>{const multiSelectedBlockClientIds=getMultiSelectedBlockClientIds(state);return multiSelectedBlockClientIds.length?multiSelectedBlockClientIds.map((clientId=>getBlock(state,clientId))):EMPTY_ARRAY}),(state=>[...getSelectedBlockClientIds.getDependants(state),state.blocks.byClientId,state.blocks.order,state.blocks.attributes]));function getFirstMultiSelectedBlockClientId(state){return getMultiSelectedBlockClientIds(state)[0]||null}function getLastMultiSelectedBlockClientId(state){const selectedClientIds=getMultiSelectedBlockClientIds(state);return selectedClientIds[selectedClientIds.length-1]||null}function isFirstMultiSelectedBlock(state,clientId){return getFirstMultiSelectedBlockClientId(state)===clientId}function isBlockMultiSelected(state,clientId){return-1!==getMultiSelectedBlockClientIds(state).indexOf(clientId)}const isAncestorMultiSelected=(0,rememo.Z)(((state,clientId)=>{let ancestorClientId=clientId,isMultiSelected=!1;for(;ancestorClientId&&!isMultiSelected;)ancestorClientId=getBlockRootClientId(state,ancestorClientId),isMultiSelected=isBlockMultiSelected(state,ancestorClientId);return isMultiSelected}),(state=>[state.blocks.order,state.selection.selectionStart.clientId,state.selection.selectionEnd.clientId]));function getMultiSelectedBlocksStartClientId(state){const{selectionStart:selectionStart,selectionEnd:selectionEnd}=state.selection;return selectionStart.clientId===selectionEnd.clientId?null:selectionStart.clientId||null}function getMultiSelectedBlocksEndClientId(state){const{selectionStart:selectionStart,selectionEnd:selectionEnd}=state.selection;return selectionStart.clientId===selectionEnd.clientId?null:selectionEnd.clientId||null}function __unstableIsFullySelected(state){const selectionAnchor=getSelectionStart(state),selectionFocus=getSelectionEnd(state);return!selectionAnchor.attributeKey&&!selectionFocus.attributeKey&&void 0===selectionAnchor.offset&&void 0===selectionFocus.offset}function __unstableIsSelectionCollapsed(state){const selectionAnchor=getSelectionStart(state),selectionFocus=getSelectionEnd(state);return!!selectionAnchor&&!!selectionFocus&&selectionAnchor.clientId===selectionFocus.clientId&&selectionAnchor.attributeKey===selectionFocus.attributeKey&&selectionAnchor.offset===selectionFocus.offset}function __unstableSelectionHasUnmergeableBlock(state){return getSelectedBlockClientIds(state).some((clientId=>{const blockName=getBlockName(state,clientId);return!(0,blocks_build_module.ck)(blockName).merge}))}function __unstableIsSelectionMergeable(state,isForward){const selectionAnchor=getSelectionStart(state),selectionFocus=getSelectionEnd(state);if(selectionAnchor.clientId===selectionFocus.clientId)return!1;if(!selectionAnchor.attributeKey||!selectionFocus.attributeKey||void 0===selectionAnchor.offset||void 0===selectionFocus.offset)return!1;const anchorRootClientId=getBlockRootClientId(state,selectionAnchor.clientId);if(anchorRootClientId!==getBlockRootClientId(state,selectionFocus.clientId))return!1;const blockOrder=getBlockOrder(state,anchorRootClientId);let selectionStart,selectionEnd;blockOrder.indexOf(selectionAnchor.clientId)>blockOrder.indexOf(selectionFocus.clientId)?(selectionStart=selectionFocus,selectionEnd=selectionAnchor):(selectionStart=selectionAnchor,selectionEnd=selectionFocus);const targetBlockClientId=isForward?selectionEnd.clientId:selectionStart.clientId,blockToMergeClientId=isForward?selectionStart.clientId:selectionEnd.clientId,targetBlockName=getBlockName(state,targetBlockClientId);if(!(0,blocks_build_module.ck)(targetBlockName).merge)return!1;const blockToMerge=getBlock(state,blockToMergeClientId);if(blockToMerge.name===targetBlockName)return!0;const blocksToMerge=(0,blocks_build_module.m4)(blockToMerge,targetBlockName);return blocksToMerge&&blocksToMerge.length}const __unstableGetSelectedBlocksWithPartialSelection=state=>{const selectionAnchor=getSelectionStart(state),selectionFocus=getSelectionEnd(state);if(selectionAnchor.clientId===selectionFocus.clientId)return EMPTY_ARRAY;if(!selectionAnchor.attributeKey||!selectionFocus.attributeKey||void 0===selectionAnchor.offset||void 0===selectionFocus.offset)return EMPTY_ARRAY;const anchorRootClientId=getBlockRootClientId(state,selectionAnchor.clientId);if(anchorRootClientId!==getBlockRootClientId(state,selectionFocus.clientId))return EMPTY_ARRAY;const blockOrder=getBlockOrder(state,anchorRootClientId),anchorIndex=blockOrder.indexOf(selectionAnchor.clientId),focusIndex=blockOrder.indexOf(selectionFocus.clientId),[selectionStart,selectionEnd]=anchorIndex>focusIndex?[selectionFocus,selectionAnchor]:[selectionAnchor,selectionFocus],blockA=getBlock(state,selectionStart.clientId),blockAType=(0,blocks_build_module.ck)(blockA.name),blockB=getBlock(state,selectionEnd.clientId),blockBType=(0,blocks_build_module.ck)(blockB.name),htmlA=blockA.attributes[selectionStart.attributeKey],htmlB=blockB.attributes[selectionEnd.attributeKey],attributeDefinitionA=blockAType.attributes[selectionStart.attributeKey],attributeDefinitionB=blockBType.attributes[selectionEnd.attributeKey];let valueA=(0,rich_text_build_module.Ue)({html:htmlA,...mapRichTextSettings(attributeDefinitionA)}),valueB=(0,rich_text_build_module.Ue)({html:htmlB,...mapRichTextSettings(attributeDefinitionB)});return valueA=(0,rich_text_build_module.Od)(valueA,0,selectionStart.offset),valueB=(0,rich_text_build_module.Od)(valueB,selectionEnd.offset,valueB.text.length),[{...blockA,attributes:{...blockA.attributes,[selectionStart.attributeKey]:(0,rich_text_build_module.Jz)({value:valueA,...mapRichTextSettings(attributeDefinitionA)})}},{...blockB,attributes:{...blockB.attributes,[selectionEnd.attributeKey]:(0,rich_text_build_module.Jz)({value:valueB,...mapRichTextSettings(attributeDefinitionB)})}}]};function getBlockOrder(state,rootClientId){return state.blocks.order.get(rootClientId||"")||EMPTY_ARRAY}function getBlockIndex(state,clientId){return getBlockOrder(state,getBlockRootClientId(state,clientId)).indexOf(clientId)}function isBlockSelected(state,clientId){const{selectionStart:selectionStart,selectionEnd:selectionEnd}=state.selection;return selectionStart.clientId===selectionEnd.clientId&&selectionStart.clientId===clientId}function hasSelectedInnerBlock(state,clientId){let deep=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return getBlockOrder(state,clientId).some((innerClientId=>isBlockSelected(state,innerClientId)||isBlockMultiSelected(state,innerClientId)||deep&&hasSelectedInnerBlock(state,innerClientId,deep)))}function isBlockWithinSelection(state,clientId){if(!clientId)return!1;const clientIds=getMultiSelectedBlockClientIds(state),index=clientIds.indexOf(clientId);return index>-1&&index<clientIds.length-1}function hasMultiSelection(state){const{selectionStart:selectionStart,selectionEnd:selectionEnd}=state.selection;return selectionStart.clientId!==selectionEnd.clientId}function selectors_isMultiSelecting(state){return state.isMultiSelecting}function selectors_isSelectionEnabled(state){return state.isSelectionEnabled}function getBlockMode(state,clientId){return state.blocksMode[clientId]||"visual"}function selectors_isTyping(state){return state.isTyping}function __experimentalIsBlockInterfaceHidden(state){return state.isBlockInterfaceHidden}function isDraggingBlocks(state){return!!state.draggedBlocks.length}function getDraggedBlockClientIds(state){return state.draggedBlocks}function isBlockBeingDragged(state,clientId){return state.draggedBlocks.includes(clientId)}function isAncestorBeingDragged(state,clientId){if(!isDraggingBlocks(state))return!1;return getBlockParents(state,clientId).some((parentClientId=>isBlockBeingDragged(state,parentClientId)))}function isCaretWithinFormattedText(){return(0,deprecated_build_module.Z)('wp.data.select( "core/block-editor" ).isCaretWithinFormattedText',{since:"6.1",version:"6.3"}),!1}function getBlockInsertionPoint(state){let rootClientId,index;const{insertionPoint:insertionPoint,selection:{selectionEnd:selectionEnd}}=state;if(null!==insertionPoint)return insertionPoint;const{clientId:clientId}=selectionEnd;return clientId?(rootClientId=getBlockRootClientId(state,clientId)||void 0,index=getBlockIndex(state,selectionEnd.clientId)+1):index=getBlockOrder(state).length,{rootClientId:rootClientId,index:index}}function isBlockInsertionPointVisible(state){return null!==state.insertionPoint}function isValidTemplate(state){return state.template.isValid}function getTemplate(state){return state.settings.template}function getTemplateLock(state,rootClientId){var _getBlockListSettings,_getBlockListSettings2,_state$settings$templ;return rootClientId?null!==(_getBlockListSettings=null===(_getBlockListSettings2=getBlockListSettings(state,rootClientId))||void 0===_getBlockListSettings2?void 0:_getBlockListSettings2.templateLock)&&void 0!==_getBlockListSettings&&_getBlockListSettings:null!==(_state$settings$templ=state.settings.templateLock)&&void 0!==_state$settings$templ&&_state$settings$templ}const checkAllowList=function(list,item){let defaultResult=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return"boolean"==typeof list?list:Array.isArray(list)?!(!list.includes("core/post-content")||null!==item)||list.includes(item):defaultResult},canInsertBlockTypeUnmemoized=function(state,blockName){let blockType,rootClientId=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(blockName&&"object"==typeof blockName?(blockType=blockName,blockName=blockType.name):blockType=(0,blocks_build_module.ck)(blockName),!blockType)return!1;const{allowedBlockTypes:allowedBlockTypes}=getSettings(state),isBlockAllowedInEditor=checkAllowList(allowedBlockTypes,blockName,!0);if(!isBlockAllowedInEditor)return!1;const isLocked=!!getTemplateLock(state,rootClientId);if(isLocked)return!1;const parentBlockListSettings=getBlockListSettings(state,rootClientId);if(rootClientId&&void 0===parentBlockListSettings)return!1;const parentAllowedBlocks=null==parentBlockListSettings?void 0:parentBlockListSettings.allowedBlocks,hasParentAllowedBlock=checkAllowList(parentAllowedBlocks,blockName),blockAllowedParentBlocks=blockType.parent,parentName=getBlockName(state,rootClientId),hasBlockAllowedParent=checkAllowList(blockAllowedParentBlocks,parentName);let hasBlockAllowedAncestor=!0;const blockAllowedAncestorBlocks=blockType.ancestor;if(blockAllowedAncestorBlocks){hasBlockAllowedAncestor=[rootClientId,...getBlockParents(state,rootClientId)].some((ancestorClientId=>checkAllowList(blockAllowedAncestorBlocks,getBlockName(state,ancestorClientId))))}const canInsert=hasBlockAllowedAncestor&&(null===hasParentAllowedBlock&&null===hasBlockAllowedParent||!0===hasParentAllowedBlock||!0===hasBlockAllowedParent);return canInsert?(0,hooks_build_module.O)("blockEditor.__unstableCanInsertBlockType",canInsert,blockType,rootClientId,{getBlock:getBlock.bind(null,state),getBlockParentsByBlockName:getBlockParentsByBlockName.bind(null,state)}):canInsert},canInsertBlockType=(0,rememo.Z)(canInsertBlockTypeUnmemoized,((state,blockName,rootClientId)=>[state.blockListSettings[rootClientId],state.blocks.byClientId.get(rootClientId),state.settings.allowedBlockTypes,state.settings.templateLock]));function canInsertBlocks(state,clientIds){let rootClientId=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return clientIds.every((id=>canInsertBlockType(state,getBlockName(state,id),rootClientId)))}function canRemoveBlock(state,clientId){let rootClientId=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;const attributes=getBlockAttributes(state,clientId);if(null===attributes)return!0;const{lock:lock}=attributes,parentIsLocked=!!getTemplateLock(state,rootClientId);return void 0===lock||void 0===(null==lock?void 0:lock.remove)?!parentIsLocked:!(null!=lock&&lock.remove)}function canRemoveBlocks(state,clientIds){let rootClientId=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return clientIds.every((clientId=>canRemoveBlock(state,clientId,rootClientId)))}function canMoveBlock(state,clientId){let rootClientId=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;const attributes=getBlockAttributes(state,clientId);if(null===attributes)return;const{lock:lock}=attributes,parentIsLocked="all"===getTemplateLock(state,rootClientId);return void 0===lock||void 0===(null==lock?void 0:lock.move)?!parentIsLocked:!(null!=lock&&lock.move)}function canMoveBlocks(state,clientIds){let rootClientId=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return clientIds.every((clientId=>canMoveBlock(state,clientId,rootClientId)))}function canEditBlock(state,clientId){const attributes=getBlockAttributes(state,clientId);if(null===attributes)return!0;const{lock:lock}=attributes;return!(null!=lock&&lock.edit)}function canLockBlockType(state,nameOrType){var _state$settings;return!!(0,blocks_build_module.zb)(nameOrType,"lock",!0)&&!(null===(_state$settings=state.settings)||void 0===_state$settings||!_state$settings.canLockBlocks)}function getInsertUsage(state,id){var _state$preferences$in,_state$preferences$in2;return null!==(_state$preferences$in=null===(_state$preferences$in2=state.preferences.insertUsage)||void 0===_state$preferences$in2?void 0:_state$preferences$in2[id])&&void 0!==_state$preferences$in?_state$preferences$in:null}const canIncludeBlockTypeInInserter=(state,blockType,rootClientId)=>!!(0,blocks_build_module.zb)(blockType,"inserter",!0)&&canInsertBlockTypeUnmemoized(state,blockType.name,rootClientId),getItemFromVariation=(state,item)=>variation=>{const variationId=`${item.id}/${variation.name}`,{time:time,count:count=0}=getInsertUsage(state,variationId)||{};return{...item,id:variationId,icon:variation.icon||item.icon,title:variation.title||item.title,description:variation.description||item.description,category:variation.category||item.category,example:variation.hasOwnProperty("example")?variation.example:item.example,initialAttributes:{...item.initialAttributes,...variation.attributes},innerBlocks:variation.innerBlocks,keywords:variation.keywords||item.keywords,frecency:calculateFrecency(time,count)}},calculateFrecency=(time,count)=>{if(!time)return count;const duration=Date.now()-time;switch(!0){case duration<36e5:return 4*count;case duration<864e5:return 2*count;case duration<6048e5:return count/2;default:return count/4}},buildBlockTypeItem=(state,_ref3)=>{let{buildScope:buildScope="inserter"}=_ref3;return blockType=>{const id=blockType.name;let isDisabled=!1;(0,blocks_build_module.zb)(blockType.name,"multiple",!0)||(isDisabled=getBlocksByClientId(state,getClientIdsWithDescendants(state)).some((_ref4=>{let{name:name}=_ref4;return name===blockType.name})));const{time:time,count:count=0}=getInsertUsage(state,id)||{},blockItemBase={id:id,name:blockType.name,title:blockType.title,icon:blockType.icon,isDisabled:isDisabled,frecency:calculateFrecency(time,count)};if("transform"===buildScope)return blockItemBase;const inserterVariations=(0,blocks_build_module.Nr)(blockType.name,"inserter");return{...blockItemBase,initialAttributes:{},description:blockType.description,category:blockType.category,keywords:blockType.keywords,variations:inserterVariations,example:blockType.example,utility:1}}},getInserterItems=(0,rememo.Z)((function(state){let rootClientId=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const buildBlockTypeInserterItem=buildBlockTypeItem(state,{buildScope:"inserter"}),blockParserTokenizer=/^\s*<!--\s+(\/)?wp:([a-z][a-z0-9_-]*\/)?([a-z][a-z0-9_-]*)\s+({(?:(?=([^}]+|}+(?=})|(?!}\s+\/?-->)[^])*)\5|[^]*?)}\s+)?(\/)?-->/,buildReusableBlockInserterItem=reusableBlock=>{let icon=symbol.Z;if("web"===platform.Z.OS){const rawBlockMatch=("string"==typeof reusableBlock.content.raw?reusableBlock.content.raw:reusableBlock.content).match(blockParserTokenizer);if(rawBlockMatch){const[,,namespace="core/",blockName]=rawBlockMatch,referencedBlockType=(0,blocks_build_module.ck)(namespace+blockName);referencedBlockType&&(icon=referencedBlockType.icon)}}const id=`core/block/${reusableBlock.id}`,{time:time,count:count=0}=getInsertUsage(state,id)||{},frecency=calculateFrecency(time,count);return{id:id,name:"core/block",initialAttributes:{ref:reusableBlock.id},title:reusableBlock.title.raw,icon:icon,category:"reusable",keywords:[],isDisabled:!1,utility:1,frecency:frecency}},blockTypeInserterItems=(0,blocks_build_module.U8)().filter((blockType=>canIncludeBlockTypeInInserter(state,blockType,rootClientId))).map(buildBlockTypeInserterItem),reusableBlockInserterItems=canInsertBlockTypeUnmemoized(state,"core/block",rootClientId)?getReusableBlocks(state).map(buildReusableBlockInserterItem):[],items=blockTypeInserterItems.reduce(((accumulator,item)=>{const{variations:variations=[]}=item;if(variations.some((_ref5=>{let{isDefault:isDefault}=_ref5;return isDefault}))||accumulator.push(item),variations.length){const variationMapper=getItemFromVariation(state,item);accumulator.push(...variations.map(variationMapper))}return accumulator}),[]),groupByType=(blocks,block)=>{const{core:core,noncore:noncore}=blocks;return(block.name.startsWith("core/")?core:noncore).push(block),blocks},{core:coreItems,noncore:nonCoreItems}=items.reduce(groupByType,{core:[],noncore:[]}),sortedBlockTypes=[...coreItems,...nonCoreItems];return[...sortedBlockTypes,...reusableBlockInserterItems]}),((state,rootClientId)=>[state.blockListSettings[rootClientId],state.blocks.byClientId,state.blocks.order,state.preferences.insertUsage,state.settings.allowedBlockTypes,state.settings.templateLock,getReusableBlocks(state),(0,blocks_build_module.U8)()])),getBlockTransformItems=(0,rememo.Z)((function(state,blocks){var _itemsByName$sourceBl;let rootClientId=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;const normalizedBlocks=Array.isArray(blocks)?blocks:[blocks],[sourceBlock]=normalizedBlocks,buildBlockTypeTransformItem=buildBlockTypeItem(state,{buildScope:"transform"}),blockTypeTransformItems=(0,blocks_build_module.U8)().filter((blockType=>canIncludeBlockTypeInInserter(state,blockType,rootClientId))).map(buildBlockTypeTransformItem),itemsByName=Object.fromEntries(Object.entries(blockTypeTransformItems).map((_ref6=>{let[,value]=_ref6;return[value.name,value]})));itemsByName["*"]={frecency:1/0,id:"*",isDisabled:!1,name:"*",title:(0,i18n_build_module.__)("Unwrap"),icon:null===(_itemsByName$sourceBl=itemsByName[null==sourceBlock?void 0:sourceBlock.name])||void 0===_itemsByName$sourceBl?void 0:_itemsByName$sourceBl.icon};const possibleTransforms=(0,blocks_build_module.ff)(normalizedBlocks).reduce(((accumulator,block)=>("*"===block?accumulator.push(itemsByName["*"]):itemsByName[null==block?void 0:block.name]&&accumulator.push(itemsByName[block.name]),accumulator)),[]);return(0,sorting.X)(possibleTransforms,(block=>itemsByName[block.name].frecency),"desc")}),((state,blocks,rootClientId)=>[state.blockListSettings[rootClientId],state.blocks.byClientId,state.preferences.insertUsage,state.settings.allowedBlockTypes,state.settings.templateLock,(0,blocks_build_module.U8)()])),hasInserterItems=(0,rememo.Z)((function(state){let rootClientId=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const hasBlockType=(0,blocks_build_module.U8)().some((blockType=>canIncludeBlockTypeInInserter(state,blockType,rootClientId)));if(hasBlockType)return!0;const hasReusableBlock=canInsertBlockTypeUnmemoized(state,"core/block",rootClientId)&&getReusableBlocks(state).length>0;return hasReusableBlock}),((state,rootClientId)=>[state.blockListSettings[rootClientId],state.blocks.byClientId,state.settings.allowedBlockTypes,state.settings.templateLock,getReusableBlocks(state),(0,blocks_build_module.U8)()])),__experimentalGetAllowedBlocks=(0,rememo.Z)((function(state){let rootClientId=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(rootClientId)return(0,blocks_build_module.U8)().filter((blockType=>canIncludeBlockTypeInInserter(state,blockType,rootClientId)))}),((state,rootClientId)=>[state.blockListSettings[rootClientId],state.blocks.byClientId,state.settings.allowedBlockTypes,state.settings.templateLock,(0,blocks_build_module.U8)()])),__experimentalGetDirectInsertBlock=(0,rememo.Z)((function(state){var _state$blockListSetti,_state$blockListSetti2;let rootClientId=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!rootClientId)return;const defaultBlock=null===(_state$blockListSetti=state.blockListSettings[rootClientId])||void 0===_state$blockListSetti?void 0:_state$blockListSetti.__experimentalDefaultBlock,directInsert=null===(_state$blockListSetti2=state.blockListSettings[rootClientId])||void 0===_state$blockListSetti2?void 0:_state$blockListSetti2.__experimentalDirectInsert;return defaultBlock&&directInsert?"function"==typeof directInsert?directInsert(getBlock(state,rootClientId))?defaultBlock:null:defaultBlock:void 0}),((state,rootClientId)=>[state.blockListSettings[rootClientId],state.blocks.tree.get(rootClientId)])),__experimentalGetParsedPattern=(0,rememo.Z)(((state,patternName)=>{const pattern=state.settings.__experimentalBlockPatterns.find((_ref7=>{let{name:name}=_ref7;return name===patternName}));return pattern?{...pattern,blocks:(0,blocks_build_module.Qc)(pattern.content,{__unstableSkipMigrationLogs:!0})}:null}),(state=>[state.settings.__experimentalBlockPatterns])),getAllAllowedPatterns=(0,rememo.Z)((state=>{const patterns=state.settings.__experimentalBlockPatterns,{allowedBlockTypes:allowedBlockTypes}=getSettings(state),allowedPatterns=patterns.filter((_ref8=>{let{inserter:inserter=!0}=_ref8;return!!inserter})).map((_ref9=>{let{name:name}=_ref9;return __experimentalGetParsedPattern(state,name)})).filter((_ref10=>{let{blocks:blocks}=_ref10;return((blocks,allowedBlockTypes)=>{if("boolean"==typeof allowedBlockTypes)return allowedBlockTypes;const blocksQueue=[...blocks];for(;blocksQueue.length>0;){var _block$innerBlocks;const block=blocksQueue.shift();if(!checkAllowList(allowedBlockTypes,block.name||block.blockName,!0))return!1;null===(_block$innerBlocks=block.innerBlocks)||void 0===_block$innerBlocks||_block$innerBlocks.forEach((innerBlock=>{blocksQueue.push(innerBlock)}))}return!0})(blocks,allowedBlockTypes)}));return allowedPatterns}),(state=>[state.settings.__experimentalBlockPatterns,state.settings.allowedBlockTypes])),__experimentalGetAllowedPatterns=(0,rememo.Z)((function(state){let rootClientId=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const availableParsedPatterns=getAllAllowedPatterns(state),patternsAllowed=availableParsedPatterns.filter((_ref11=>{let{blocks:blocks}=_ref11;return blocks.every((_ref12=>{let{name:name}=_ref12;return canInsertBlockType(state,name,rootClientId)}))}));return patternsAllowed}),((state,rootClientId)=>[state.settings.__experimentalBlockPatterns,state.settings.allowedBlockTypes,state.settings.templateLock,state.blockListSettings[rootClientId],state.blocks.byClientId.get(rootClientId)])),__experimentalGetPatternsByBlockTypes=(0,rememo.Z)((function(state,blockNames){let rootClientId=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(!blockNames)return EMPTY_ARRAY;const patterns=__experimentalGetAllowedPatterns(state,rootClientId),normalizedBlockNames=Array.isArray(blockNames)?blockNames:[blockNames];return patterns.filter((pattern=>{var _pattern$blockTypes,_pattern$blockTypes$s;return null==pattern||null===(_pattern$blockTypes=pattern.blockTypes)||void 0===_pattern$blockTypes||null===(_pattern$blockTypes$s=_pattern$blockTypes.some)||void 0===_pattern$blockTypes$s?void 0:_pattern$blockTypes$s.call(_pattern$blockTypes,(blockName=>normalizedBlockNames.includes(blockName)))}))}),((state,blockNames,rootClientId)=>[...__experimentalGetAllowedPatterns.getDependants(state,rootClientId)])),__experimentalGetPatternTransformItems=(0,rememo.Z)((function(state,blocks){let rootClientId=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(!blocks)return EMPTY_ARRAY;if(blocks.some((_ref13=>{let{clientId:clientId,innerBlocks:innerBlocks}=_ref13;return innerBlocks.length||areInnerBlocksControlled(state,clientId)})))return EMPTY_ARRAY;const selectedBlockNames=Array.from(new Set(blocks.map((_ref14=>{let{name:name}=_ref14;return name}))));return __experimentalGetPatternsByBlockTypes(state,selectedBlockNames,rootClientId)}),((state,blocks,rootClientId)=>[...__experimentalGetPatternsByBlockTypes.getDependants(state,rootClientId)]));function getBlockListSettings(state,clientId){return state.blockListSettings[clientId]}function getSettings(state){return state.settings}function isLastBlockChangePersistent(state){return state.blocks.isPersistentChange}const __experimentalGetBlockListSettingsForBlocks=(0,rememo.Z)((function(state){let clientIds=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return clientIds.reduce(((blockListSettingsForBlocks,clientId)=>state.blockListSettings[clientId]?{...blockListSettingsForBlocks,[clientId]:state.blockListSettings[clientId]}:blockListSettingsForBlocks),{})}),(state=>[state.blockListSettings])),__experimentalGetReusableBlockTitle=(0,rememo.Z)(((state,ref)=>{var _reusableBlock$title;const reusableBlock=getReusableBlocks(state).find((block=>block.id===ref));return reusableBlock?null===(_reusableBlock$title=reusableBlock.title)||void 0===_reusableBlock$title?void 0:_reusableBlock$title.raw:null}),(state=>[getReusableBlocks(state)]));function __unstableIsLastBlockChangeIgnored(state){return state.blocks.isIgnoredChange}function __experimentalGetLastBlockAttributeChanges(state){return state.lastBlockAttributesChange}function getReusableBlocks(state){var _state$settings$__exp,_state$settings2;return null!==(_state$settings$__exp=null==state||null===(_state$settings2=state.settings)||void 0===_state$settings2?void 0:_state$settings2.__experimentalReusableBlocks)&&void 0!==_state$settings$__exp?_state$settings$__exp:EMPTY_ARRAY}function isNavigationMode(state){return"navigation"===state.editorMode}function __unstableGetEditorMode(state){return state.editorMode}function selectors_hasBlockMovingClientId(state){return state.hasBlockMovingClientId}function didAutomaticChange(state){return!!state.automaticChangeStatus}function isBlockHighlighted(state,clientId){return state.highlightedBlock===clientId}function areInnerBlocksControlled(state,clientId){return!!state.blocks.controlledInnerBlocks[clientId]}const __experimentalGetActiveBlockIdByBlockNames=(0,rememo.Z)(((state,validBlockNames)=>{if(!validBlockNames.length)return null;const selectedBlockClientId=getSelectedBlockClientId(state);if(validBlockNames.includes(getBlockName(state,selectedBlockClientId)))return selectedBlockClientId;const multiSelectedBlockClientIds=getMultiSelectedBlockClientIds(state),entityAreaParents=getBlockParentsByBlockName(state,selectedBlockClientId||multiSelectedBlockClientIds[0],validBlockNames);return entityAreaParents?entityAreaParents[entityAreaParents.length-1]:null}),((state,validBlockNames)=>[state.selection.selectionStart.clientId,state.selection.selectionEnd.clientId,validBlockNames]));function wasBlockJustInserted(state,clientId,source){const{lastBlockInserted:lastBlockInserted}=state;return lastBlockInserted.clientId===clientId&&lastBlockInserted.source===source}function getLastInsertedBlockClientId(state){var _state$lastBlockInser;return null==state||null===(_state$lastBlockInser=state.lastBlockInserted)||void 0===_state$lastBlockInser?void 0:_state$lastBlockInser.clientId}function isBlockVisible(state,clientId){var _state$blockVisibilit,_state$blockVisibilit2;return null===(_state$blockVisibilit=null===(_state$blockVisibilit2=state.blockVisibility)||void 0===_state$blockVisibilit2?void 0:_state$blockVisibilit2[clientId])||void 0===_state$blockVisibilit||_state$blockVisibilit}const __unstableGetVisibleBlocks=(0,rememo.Z)((state=>new Set(Object.keys(state.blockVisibility).filter((key=>state.blockVisibility[key])))),(state=>[state.blockVisibility])),__unstableGetContentLockingParent=(0,rememo.Z)(((state,clientId)=>{let result,current=clientId;for(;state.blocks.parents.has(current);)current=state.blocks.parents.get(current),"contentOnly"===getTemplateLock(state,current)&&(result=current);return result}),(state=>[state.blocks.parents,state.blockListSettings]));function __unstableGetTemporarilyEditingAsBlocks(state){return state.temporarilyEditingAsBlocks}function __unstableHasActiveBlockOverlayActive(state,clientId){if(!canEditBlock(state,clientId))return!0;const editorMode=__unstableGetEditorMode(state);if("zoom-out"===editorMode&&clientId&&!getBlockRootClientId(state,clientId))return!0;const blockSupportDisable=(0,blocks_build_module.zb)(getBlockName(state,clientId),"__experimentalDisableBlockOverlay",!1);return("navigation"===editorMode||!blockSupportDisable&&areInnerBlocksControlled(state,clientId))&&!isBlockSelected(state,clientId)&&!hasSelectedInnerBlock(state,clientId,!0)}function __unstableIsWithinBlockOverlay(state,clientId){let parent=state.blocks.parents[clientId];for(;parent;){if(__unstableHasActiveBlockOverlayActive(state,parent))return!0;parent=state.blocks.parents[parent]}return!1}var a11y_build_module=__webpack_require__("./packages/a11y/build-module/index.js");function retrieveSelectedAttribute(blockAttributes){if(blockAttributes)return Object.keys(blockAttributes).find((name=>{const value=blockAttributes[name];return"string"==typeof value&&-1!==value.indexOf("")}))}const castArray=maybeArray=>Array.isArray(maybeArray)?maybeArray:[maybeArray],resetBlocks=blocks=>_ref2=>{let{dispatch:dispatch}=_ref2;dispatch({type:"RESET_BLOCKS",blocks:blocks}),dispatch(validateBlocksToTemplate(blocks))},validateBlocksToTemplate=blocks=>_ref3=>{let{select:select,dispatch:dispatch}=_ref3;const template=select.getTemplate(),templateLock=select.getTemplateLock(),isBlocksValidToTemplate=!template||"all"!==templateLock||(0,blocks_build_module.aW)(blocks,template);if(isBlocksValidToTemplate!==select.isValidTemplate())return dispatch.setTemplateValidity(isBlocksValidToTemplate),isBlocksValidToTemplate};function resetSelection(selectionStart,selectionEnd,initialPosition){return{type:"RESET_SELECTION",selectionStart:selectionStart,selectionEnd:selectionEnd,initialPosition:initialPosition}}function receiveBlocks(blocks){return(0,deprecated_build_module.Z)('wp.data.dispatch( "core/block-editor" ).receiveBlocks',{since:"5.9",alternative:"resetBlocks or insertBlocks"}),{type:"RECEIVE_BLOCKS",blocks:blocks}}function updateBlockAttributes(clientIds,attributes){let uniqueByBlock=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return{type:"UPDATE_BLOCK_ATTRIBUTES",clientIds:castArray(clientIds),attributes:attributes,uniqueByBlock:uniqueByBlock}}function updateBlock(clientId,updates){return{type:"UPDATE_BLOCK",clientId:clientId,updates:updates}}function selectBlock(clientId){let initialPosition=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return{type:"SELECT_BLOCK",initialPosition:initialPosition,clientId:clientId}}const selectPreviousBlock=clientId=>_ref4=>{let{select:select,dispatch:dispatch}=_ref4;const previousBlockClientId=select.getPreviousBlockClientId(clientId);previousBlockClientId&&dispatch.selectBlock(previousBlockClientId,-1)},selectNextBlock=clientId=>_ref5=>{let{select:select,dispatch:dispatch}=_ref5;const nextBlockClientId=select.getNextBlockClientId(clientId);nextBlockClientId&&dispatch.selectBlock(nextBlockClientId)};function startMultiSelect(){return{type:"START_MULTI_SELECT"}}function stopMultiSelect(){return{type:"STOP_MULTI_SELECT"}}const multiSelect=function(start,end){let __experimentalInitialPosition=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return _ref6=>{let{select:select,dispatch:dispatch}=_ref6;if(select.getBlockRootClientId(start)!==select.getBlockRootClientId(end))return;dispatch({type:"MULTI_SELECT",start:start,end:end,initialPosition:__experimentalInitialPosition});const blockCount=select.getSelectedBlockCount();(0,a11y_build_module.D)((0,i18n_build_module.gB)((0,i18n_build_module._n)("%s block selected.","%s blocks selected.",blockCount),blockCount),"assertive")}};function clearSelectedBlock(){return{type:"CLEAR_SELECTED_BLOCK"}}function toggleSelection(){let isSelectionEnabled=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return{type:"TOGGLE_SELECTION",isSelectionEnabled:isSelectionEnabled}}function getBlocksWithDefaultStylesApplied(blocks,blockEditorSettings){var _blockEditorSettings$,_blockEditorSettings$2;const preferredStyleVariations=null!==(_blockEditorSettings$=null==blockEditorSettings||null===(_blockEditorSettings$2=blockEditorSettings.__experimentalPreferredStyleVariations)||void 0===_blockEditorSettings$2?void 0:_blockEditorSettings$2.value)&&void 0!==_blockEditorSettings$?_blockEditorSettings$:{};return blocks.map((block=>{var _block$attributes;const blockName=block.name;if(!(0,blocks_build_module.zb)(blockName,"defaultStylePicker",!0))return block;if(!preferredStyleVariations[blockName])return block;const className=null===(_block$attributes=block.attributes)||void 0===_block$attributes?void 0:_block$attributes.className;if(null!=className&&className.includes("is-style-"))return block;const{attributes:attributes={}}=block,blockStyle=preferredStyleVariations[blockName];return{...block,attributes:{...attributes,className:`${className||""} is-style-${blockStyle}`.trim()}}}))}const replaceBlocks=function(clientIds,blocks,indexToSelect){let initialPosition=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,meta=arguments.length>4?arguments[4]:void 0;return _ref7=>{let{select:select,dispatch:dispatch}=_ref7;clientIds=castArray(clientIds),blocks=getBlocksWithDefaultStylesApplied(castArray(blocks),select.getSettings());const rootClientId=select.getBlockRootClientId(clientIds[0]);for(let index=0;index<blocks.length;index++){const block=blocks[index];if(!select.canInsertBlockType(block.name,rootClientId))return}dispatch({type:"REPLACE_BLOCKS",clientIds:clientIds,blocks:blocks,time:Date.now(),indexToSelect:indexToSelect,initialPosition:initialPosition,meta:meta}),dispatch((_ref=>{let{select:select,dispatch:dispatch}=_ref;if(select.getBlockCount()>0)return;const{__unstableHasCustomAppender:__unstableHasCustomAppender}=select.getSettings();__unstableHasCustomAppender||dispatch.insertDefaultBlock()}))}};function replaceBlock(clientId,block){return replaceBlocks(clientId,block)}const createOnMove=type=>(clientIds,rootClientId)=>_ref8=>{let{select:select,dispatch:dispatch}=_ref8;select.canMoveBlocks(clientIds,rootClientId)&&dispatch({type:type,clientIds:castArray(clientIds),rootClientId:rootClientId})},moveBlocksDown=createOnMove("MOVE_BLOCKS_DOWN"),moveBlocksUp=createOnMove("MOVE_BLOCKS_UP"),moveBlocksToPosition=function(clientIds){let fromRootClientId=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",toRootClientId=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",index=arguments.length>3?arguments[3]:void 0;return _ref9=>{let{select:select,dispatch:dispatch}=_ref9;if(select.canMoveBlocks(clientIds,fromRootClientId)){if(fromRootClientId!==toRootClientId){if(!select.canRemoveBlocks(clientIds,fromRootClientId))return;if(!select.canInsertBlocks(clientIds,toRootClientId))return}dispatch({type:"MOVE_BLOCKS_TO_POSITION",fromRootClientId:fromRootClientId,toRootClientId:toRootClientId,clientIds:clientIds,index:index})}}};function moveBlockToPosition(clientId){let fromRootClientId=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",toRootClientId=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",index=arguments.length>3?arguments[3]:void 0;return moveBlocksToPosition([clientId],fromRootClientId,toRootClientId,index)}function insertBlock(block,index,rootClientId,updateSelection,meta){return insertBlocks([block],index,rootClientId,updateSelection,0,meta)}const insertBlocks=function(blocks,index,rootClientId){let updateSelection=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],initialPosition=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,meta=arguments.length>5?arguments[5]:void 0;return _ref10=>{let{select:select,dispatch:dispatch}=_ref10;null!==initialPosition&&"object"==typeof initialPosition&&(meta=initialPosition,initialPosition=0,(0,deprecated_build_module.Z)("meta argument in wp.data.dispatch('core/block-editor')",{since:"5.8",hint:"The meta argument is now the 6th argument of the function"})),blocks=getBlocksWithDefaultStylesApplied(castArray(blocks),select.getSettings());const allowedBlocks=[];for(const block of blocks){select.canInsertBlockType(block.name,rootClientId)&&allowedBlocks.push(block)}allowedBlocks.length&&dispatch({type:"INSERT_BLOCKS",blocks:allowedBlocks,index:index,rootClientId:rootClientId,time:Date.now(),updateSelection:updateSelection,initialPosition:updateSelection?initialPosition:null,meta:meta})}};function showInsertionPoint(rootClientId,index){let __unstableOptions=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{__unstableWithInserter:__unstableWithInserter,operation:operation}=__unstableOptions;return{type:"SHOW_INSERTION_POINT",rootClientId:rootClientId,index:index,__unstableWithInserter:__unstableWithInserter,operation:operation}}const hideInsertionPoint=()=>_ref11=>{let{select:select,dispatch:dispatch}=_ref11;select.isBlockInsertionPointVisible()&&dispatch({type:"HIDE_INSERTION_POINT"})};function setTemplateValidity(isValid){return{type:"SET_TEMPLATE_VALIDITY",isValid:isValid}}const synchronizeTemplate=()=>_ref12=>{let{select:select,dispatch:dispatch}=_ref12;dispatch({type:"SYNCHRONIZE_TEMPLATE"});const blocks=select.getBlocks(),template=select.getTemplate(),updatedBlockList=(0,blocks_build_module.fw)(blocks,template);dispatch.resetBlocks(updatedBlockList)},__unstableDeleteSelection=isForward=>_ref13=>{let{registry:registry,select:select,dispatch:dispatch}=_ref13;const selectionAnchor=select.getSelectionStart(),selectionFocus=select.getSelectionEnd();if(selectionAnchor.clientId===selectionFocus.clientId)return;if(!selectionAnchor.attributeKey||!selectionFocus.attributeKey||void 0===selectionAnchor.offset||void 0===selectionFocus.offset)return!1;const anchorRootClientId=select.getBlockRootClientId(selectionAnchor.clientId);if(anchorRootClientId!==select.getBlockRootClientId(selectionFocus.clientId))return;const blockOrder=select.getBlockOrder(anchorRootClientId);let selectionStart,selectionEnd;blockOrder.indexOf(selectionAnchor.clientId)>blockOrder.indexOf(selectionFocus.clientId)?(selectionStart=selectionFocus,selectionEnd=selectionAnchor):(selectionStart=selectionAnchor,selectionEnd=selectionFocus);const targetSelection=isForward?selectionEnd:selectionStart,targetBlock=select.getBlock(targetSelection.clientId),targetBlockType=(0,blocks_build_module.ck)(targetBlock.name);if(!targetBlockType.merge)return;const selectionA=selectionStart,selectionB=selectionEnd,blockA=select.getBlock(selectionA.clientId),blockAType=(0,blocks_build_module.ck)(blockA.name),blockB=select.getBlock(selectionB.clientId),blockBType=(0,blocks_build_module.ck)(blockB.name),htmlA=blockA.attributes[selectionA.attributeKey],htmlB=blockB.attributes[selectionB.attributeKey],attributeDefinitionA=blockAType.attributes[selectionA.attributeKey],attributeDefinitionB=blockBType.attributes[selectionB.attributeKey];let valueA=(0,rich_text_build_module.Ue)({html:htmlA,...mapRichTextSettings(attributeDefinitionA)}),valueB=(0,rich_text_build_module.Ue)({html:htmlB,...mapRichTextSettings(attributeDefinitionB)});valueA=(0,rich_text_build_module.Od)(valueA,selectionA.offset,valueA.text.length),valueB=(0,rich_text_build_module.$T)(valueB,"",0,selectionB.offset);const cloneA=(0,blocks_build_module.Wm)(blockA,{[selectionA.attributeKey]:(0,rich_text_build_module.Jz)({value:valueA,...mapRichTextSettings(attributeDefinitionA)})}),cloneB=(0,blocks_build_module.Wm)(blockB,{[selectionB.attributeKey]:(0,rich_text_build_module.Jz)({value:valueB,...mapRichTextSettings(attributeDefinitionB)})}),followingBlock=isForward?cloneA:cloneB,blocksWithTheSameType=blockA.name===blockB.name?[followingBlock]:(0,blocks_build_module.m4)(followingBlock,targetBlockType.name);if(!blocksWithTheSameType||!blocksWithTheSameType.length)return;let updatedAttributes;if(isForward){const blockToMerge=blocksWithTheSameType.pop();updatedAttributes=targetBlockType.merge(blockToMerge.attributes,cloneB.attributes)}else{const blockToMerge=blocksWithTheSameType.shift();updatedAttributes=targetBlockType.merge(cloneA.attributes,blockToMerge.attributes)}const newAttributeKey=retrieveSelectedAttribute(updatedAttributes),convertedHtml=updatedAttributes[newAttributeKey],convertedValue=(0,rich_text_build_module.Ue)({html:convertedHtml,...mapRichTextSettings(targetBlockType.attributes[newAttributeKey])}),newOffset=convertedValue.text.indexOf(""),newValue=(0,rich_text_build_module.Od)(convertedValue,newOffset,newOffset+1),newHtml=(0,rich_text_build_module.Jz)({value:newValue,...mapRichTextSettings(targetBlockType.attributes[newAttributeKey])});updatedAttributes[newAttributeKey]=newHtml;const selectedBlockClientIds=select.getSelectedBlockClientIds(),replacement=[...isForward?blocksWithTheSameType:[],{...targetBlock,attributes:{...targetBlock.attributes,...updatedAttributes}},...isForward?[]:blocksWithTheSameType];registry.batch((()=>{dispatch.selectionChange(targetBlock.clientId,newAttributeKey,newOffset,newOffset),dispatch.replaceBlocks(selectedBlockClientIds,replacement,0,select.getSelectedBlocksInitialCaretPosition())}))},__unstableSplitSelection=()=>_ref14=>{let{select:select,dispatch:dispatch}=_ref14;const selectionAnchor=select.getSelectionStart(),selectionFocus=select.getSelectionEnd();if(selectionAnchor.clientId===selectionFocus.clientId)return;if(!selectionAnchor.attributeKey||!selectionFocus.attributeKey||void 0===selectionAnchor.offset||void 0===selectionFocus.offset)return;const anchorRootClientId=select.getBlockRootClientId(selectionAnchor.clientId);if(anchorRootClientId!==select.getBlockRootClientId(selectionFocus.clientId))return;const blockOrder=select.getBlockOrder(anchorRootClientId);let selectionStart,selectionEnd;blockOrder.indexOf(selectionAnchor.clientId)>blockOrder.indexOf(selectionFocus.clientId)?(selectionStart=selectionFocus,selectionEnd=selectionAnchor):(selectionStart=selectionAnchor,selectionEnd=selectionFocus);const selectionA=selectionStart,selectionB=selectionEnd,blockA=select.getBlock(selectionA.clientId),blockAType=(0,blocks_build_module.ck)(blockA.name),blockB=select.getBlock(selectionB.clientId),blockBType=(0,blocks_build_module.ck)(blockB.name),htmlA=blockA.attributes[selectionA.attributeKey],htmlB=blockB.attributes[selectionB.attributeKey],attributeDefinitionA=blockAType.attributes[selectionA.attributeKey],attributeDefinitionB=blockBType.attributes[selectionB.attributeKey];let valueA=(0,rich_text_build_module.Ue)({html:htmlA,...mapRichTextSettings(attributeDefinitionA)}),valueB=(0,rich_text_build_module.Ue)({html:htmlB,...mapRichTextSettings(attributeDefinitionB)});valueA=(0,rich_text_build_module.Od)(valueA,selectionA.offset,valueA.text.length),valueB=(0,rich_text_build_module.Od)(valueB,0,selectionB.offset),dispatch.replaceBlocks(select.getSelectedBlockClientIds(),[{...blockA,attributes:{...blockA.attributes,[selectionA.attributeKey]:(0,rich_text_build_module.Jz)({value:valueA,...mapRichTextSettings(attributeDefinitionA)})}},(0,blocks_build_module.j4)((0,blocks_build_module.UT)()),{...blockB,attributes:{...blockB.attributes,[selectionB.attributeKey]:(0,rich_text_build_module.Jz)({value:valueB,...mapRichTextSettings(attributeDefinitionB)})}}],1,select.getSelectedBlocksInitialCaretPosition())},__unstableExpandSelection=()=>_ref15=>{let{select:select,dispatch:dispatch}=_ref15;const selectionAnchor=select.getSelectionStart(),selectionFocus=select.getSelectionEnd();dispatch.selectionChange({start:{clientId:selectionAnchor.clientId},end:{clientId:selectionFocus.clientId}})},mergeBlocks=(firstBlockClientId,secondBlockClientId)=>_ref16=>{let{registry:registry,select:select,dispatch:dispatch}=_ref16;const blocks=[firstBlockClientId,secondBlockClientId];dispatch({type:"MERGE_BLOCKS",blocks:blocks});const[clientIdA,clientIdB]=blocks,blockA=select.getBlock(clientIdA),blockAType=(0,blocks_build_module.ck)(blockA.name);if(!blockAType)return;const blockB=select.getBlock(clientIdB);if(blockAType&&!blockAType.merge){const blocksWithTheSameType=(0,blocks_build_module.m4)(blockB,blockAType.name);if(1!==(null==blocksWithTheSameType?void 0:blocksWithTheSameType.length))return void dispatch.selectBlock(blockA.clientId);const[blockWithSameType]=blocksWithTheSameType;return blockWithSameType.innerBlocks.length<1?void dispatch.selectBlock(blockA.clientId):void registry.batch((()=>{dispatch.insertBlocks(blockWithSameType.innerBlocks,void 0,clientIdA),dispatch.removeBlock(clientIdB),dispatch.selectBlock(blockWithSameType.innerBlocks[0].clientId)}))}const blockBType=(0,blocks_build_module.ck)(blockB.name),{clientId:clientId,attributeKey:attributeKey,offset:offset}=select.getSelectionStart(),attributeDefinition=(clientId===clientIdA?blockAType:blockBType).attributes[attributeKey],canRestoreTextSelection=(clientId===clientIdA||clientId===clientIdB)&&void 0!==attributeKey&&void 0!==offset&&!!attributeDefinition;attributeDefinition||("number"==typeof attributeKey?window.console.error("RichText needs an identifier prop that is the block attribute key of the attribute it controls. Its type is expected to be a string, but was "+typeof attributeKey):window.console.error("The RichText identifier prop does not match any attributes defined by the block."));const cloneA=(0,blocks_build_module.Wm)(blockA),cloneB=(0,blocks_build_module.Wm)(blockB);if(canRestoreTextSelection){const selectedBlock=clientId===clientIdA?cloneA:cloneB,html=selectedBlock.attributes[attributeKey],value=(0,rich_text_build_module.$T)((0,rich_text_build_module.Ue)({html:html,...mapRichTextSettings(attributeDefinition)}),"",offset,offset);selectedBlock.attributes[attributeKey]=(0,rich_text_build_module.Jz)({value:value,...mapRichTextSettings(attributeDefinition)})}const blocksWithTheSameType=blockA.name===blockB.name?[cloneB]:(0,blocks_build_module.m4)(cloneB,blockA.name);if(!blocksWithTheSameType||!blocksWithTheSameType.length)return;const updatedAttributes=blockAType.merge(cloneA.attributes,blocksWithTheSameType[0].attributes);if(canRestoreTextSelection){const newAttributeKey=retrieveSelectedAttribute(updatedAttributes),convertedHtml=updatedAttributes[newAttributeKey],convertedValue=(0,rich_text_build_module.Ue)({html:convertedHtml,...mapRichTextSettings(blockAType.attributes[newAttributeKey])}),newOffset=convertedValue.text.indexOf(""),newValue=(0,rich_text_build_module.Od)(convertedValue,newOffset,newOffset+1),newHtml=(0,rich_text_build_module.Jz)({value:newValue,...mapRichTextSettings(blockAType.attributes[newAttributeKey])});updatedAttributes[newAttributeKey]=newHtml,dispatch.selectionChange(blockA.clientId,newAttributeKey,newOffset,newOffset)}dispatch.replaceBlocks([blockA.clientId,blockB.clientId],[{...blockA,attributes:{...blockA.attributes,...updatedAttributes}},...blocksWithTheSameType.slice(1)],0)},removeBlocks=function(clientIds){let selectPrevious=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return _ref17=>{let{select:select,dispatch:dispatch}=_ref17;if(!clientIds||!clientIds.length)return;clientIds=castArray(clientIds);const rootClientId=select.getBlockRootClientId(clientIds[0]);select.canRemoveBlocks(clientIds,rootClientId)&&(selectPrevious&&dispatch.selectPreviousBlock(clientIds[0]),dispatch({type:"REMOVE_BLOCKS",clientIds:clientIds}),dispatch((_ref=>{let{select:select,dispatch:dispatch}=_ref;if(select.getBlockCount()>0)return;const{__unstableHasCustomAppender:__unstableHasCustomAppender}=select.getSettings();__unstableHasCustomAppender||dispatch.insertDefaultBlock()})))}};function removeBlock(clientId,selectPrevious){return removeBlocks([clientId],selectPrevious)}function replaceInnerBlocks(rootClientId,blocks){let updateSelection=arguments.length>2&&void 0!==arguments[2]&&arguments[2],initialPosition=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;return{type:"REPLACE_INNER_BLOCKS",rootClientId:rootClientId,blocks:blocks,updateSelection:updateSelection,initialPosition:updateSelection?initialPosition:null,time:Date.now()}}function toggleBlockMode(clientId){return{type:"TOGGLE_BLOCK_MODE",clientId:clientId}}function __experimentalHideBlockInterface(){return{type:"HIDE_BLOCK_INTERFACE"}}function __experimentalShowBlockInterface(){return{type:"SHOW_BLOCK_INTERFACE"}}function startTyping(){return{type:"START_TYPING"}}function stopTyping(){return{type:"STOP_TYPING"}}function startDraggingBlocks(){let clientIds=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return{type:"START_DRAGGING_BLOCKS",clientIds:clientIds}}function stopDraggingBlocks(){return{type:"STOP_DRAGGING_BLOCKS"}}function enterFormattedText(){return(0,deprecated_build_module.Z)('wp.data.dispatch( "core/block-editor" ).enterFormattedText',{since:"6.1",version:"6.3"}),{type:"DO_NOTHING"}}function exitFormattedText(){return(0,deprecated_build_module.Z)('wp.data.dispatch( "core/block-editor" ).exitFormattedText',{since:"6.1",version:"6.3"}),{type:"DO_NOTHING"}}function selectionChange(clientId,attributeKey,startOffset,endOffset){return"string"==typeof clientId?{type:"SELECTION_CHANGE",clientId:clientId,attributeKey:attributeKey,startOffset:startOffset,endOffset:endOffset}:{type:"SELECTION_CHANGE",...clientId}}const insertDefaultBlock=(attributes,rootClientId,index)=>_ref18=>{let{dispatch:dispatch}=_ref18;const defaultBlockName=(0,blocks_build_module.UT)();if(!defaultBlockName)return;const block=(0,blocks_build_module.j4)(defaultBlockName,attributes);return dispatch.insertBlock(block,index,rootClientId)};function updateBlockListSettings(clientId,settings){return{type:"UPDATE_BLOCK_LIST_SETTINGS",clientId:clientId,settings:settings}}function updateSettings(settings){return{type:"UPDATE_SETTINGS",settings:settings}}function __unstableSaveReusableBlock(id,updatedId){return{type:"SAVE_REUSABLE_BLOCK_SUCCESS",id:id,updatedId:updatedId}}function __unstableMarkLastChangeAsPersistent(){return{type:"MARK_LAST_CHANGE_AS_PERSISTENT"}}function __unstableMarkNextChangeAsNotPersistent(){return{type:"MARK_NEXT_CHANGE_AS_NOT_PERSISTENT"}}const __unstableMarkAutomaticChange=()=>_ref19=>{let{dispatch:dispatch}=_ref19;dispatch({type:"MARK_AUTOMATIC_CHANGE"});const{requestIdleCallback:requestIdleCallback=(cb=>setTimeout(cb,100))}=window;requestIdleCallback((()=>{dispatch({type:"MARK_AUTOMATIC_CHANGE_FINAL"})}))},setNavigationMode=function(){let isNavigationMode=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return _ref20=>{let{dispatch:dispatch}=_ref20;dispatch.__unstableSetEditorMode(isNavigationMode?"navigation":"edit")}},__unstableSetEditorMode=mode=>_ref21=>{let{dispatch:dispatch,select:select}=_ref21;if("zoom-out"===mode){const firstSelectedClientId=select.getBlockSelectionStart();firstSelectedClientId&&dispatch.selectBlock(select.getBlockHierarchyRootClientId(firstSelectedClientId))}dispatch({type:"SET_EDITOR_MODE",mode:mode}),"navigation"===mode?(0,a11y_build_module.D)((0,i18n_build_module.__)("You are currently in navigation mode. Navigate blocks using the Tab key and Arrow keys. Use Left and Right Arrow keys to move between nesting levels. To exit navigation mode and edit the selected block, press Enter.")):"edit"===mode?(0,a11y_build_module.D)((0,i18n_build_module.__)("You are currently in edit mode. To return to the navigation mode, press Escape.")):"zoom-out"===mode&&(0,a11y_build_module.D)((0,i18n_build_module.__)("You are currently in zoom-out mode."))},setBlockMovingClientId=function(){let hasBlockMovingClientId=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return _ref22=>{let{dispatch:dispatch}=_ref22;dispatch({type:"SET_BLOCK_MOVING_MODE",hasBlockMovingClientId:hasBlockMovingClientId}),hasBlockMovingClientId&&(0,a11y_build_module.D)((0,i18n_build_module.__)("Use the Tab key and Arrow keys to choose new block location. Use Left and Right Arrow keys to move between nesting levels. Once location is selected press Enter or Space to move the block."))}},duplicateBlocks=function(clientIds){let updateSelection=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return _ref23=>{let{select:select,dispatch:dispatch}=_ref23;if(!clientIds||!clientIds.length)return;const blocks=select.getBlocksByClientId(clientIds);if(blocks.some((block=>!block)))return;if(blocks.map((block=>block.name)).some((blockName=>!(0,blocks_build_module.zb)(blockName,"multiple",!0))))return;const rootClientId=select.getBlockRootClientId(clientIds[0]),clientIdsArray=castArray(clientIds),lastSelectedIndex=select.getBlockIndex(clientIdsArray[clientIdsArray.length-1]),clonedBlocks=blocks.map((block=>(0,blocks_build_module.mR)(block)));return dispatch.insertBlocks(clonedBlocks,lastSelectedIndex+1,rootClientId,updateSelection),clonedBlocks.length>1&&updateSelection&&dispatch.multiSelect(clonedBlocks[0].clientId,clonedBlocks[clonedBlocks.length-1].clientId),clonedBlocks.map((block=>block.clientId))}},insertBeforeBlock=clientId=>_ref24=>{let{select:select,dispatch:dispatch}=_ref24;if(!clientId)return;const rootClientId=select.getBlockRootClientId(clientId);if(select.getTemplateLock(rootClientId))return;const firstSelectedIndex=select.getBlockIndex(clientId);return dispatch.insertDefaultBlock({},rootClientId,firstSelectedIndex)},insertAfterBlock=clientId=>_ref25=>{let{select:select,dispatch:dispatch}=_ref25;if(!clientId)return;const rootClientId=select.getBlockRootClientId(clientId);if(select.getTemplateLock(rootClientId))return;const firstSelectedIndex=select.getBlockIndex(clientId);return dispatch.insertDefaultBlock({},rootClientId,firstSelectedIndex+1)};function toggleBlockHighlight(clientId,isHighlighted){return{type:"TOGGLE_BLOCK_HIGHLIGHT",clientId:clientId,isHighlighted:isHighlighted}}const flashBlock=clientId=>async _ref26=>{let{dispatch:dispatch}=_ref26;dispatch(toggleBlockHighlight(clientId,!0)),await new Promise((resolve=>setTimeout(resolve,150))),dispatch(toggleBlockHighlight(clientId,!1))};function setHasControlledInnerBlocks(clientId,hasControlledInnerBlocks){return{type:"SET_HAS_CONTROLLED_INNER_BLOCKS",hasControlledInnerBlocks:hasControlledInnerBlocks,clientId:clientId}}function setBlockVisibility(updates){return{type:"SET_BLOCK_VISIBILITY",updates:updates}}function __unstableSetTemporarilyEditingAsBlocks(temporarilyEditingAsBlocks){return{type:"SET_TEMPORARILY_EDITING_AS_BLOCKS",temporarilyEditingAsBlocks:temporarilyEditingAsBlocks}}var constants=__webpack_require__("./packages/block-editor/src/store/constants.js");const storeConfig={reducer:reducer,selectors:selectors_namespaceObject,actions:actions_namespaceObject},store=(0,redux_store.Z)(constants.G,{...storeConfig,persist:["preferences"]});(0,build_module.R9)(constants.G,{...storeConfig,persist:["preferences"]})},"./packages/block-editor/src/utils/sorting.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{X:function(){return orderBy}});const comparator=(field,items,order)=>(a,b)=>{let cmpA,cmpB;if("function"==typeof field?(cmpA=field(a),cmpB=field(b)):(cmpA=a[field],cmpB=b[field]),cmpA>cmpB)return"asc"===order?1:-1;if(cmpB>cmpA)return"asc"===order?-1:1;const orderA=items.findIndex((item=>item===a)),orderB=items.findIndex((item=>item===b));return orderA>orderB?1:orderB>orderA?-1:0};function orderBy(items,field){let order=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"asc";return items.concat().sort(comparator(field,items,order))}}}]);